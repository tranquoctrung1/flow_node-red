[
    {
        "id": "0cde011e2de50d9f",
        "type": "tab",
        "label": "PRV",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d978b0f7aca97104",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "3855446b400f94de",
        "type": "tab",
        "label": "System",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dea3599171b05ecc",
        "type": "tab",
        "label": "Read_Modbus",
        "disabled": false,
        "info": ""
    },
    {
        "id": "927378a3171dc25b",
        "type": "tab",
        "label": "MongoDB",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1b0c8ad9a67c0c54",
        "type": "tab",
        "label": "FTP1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cba66dcd1fa1961e",
        "type": "tab",
        "label": "FTP2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3f89b77d17bdbc04",
        "type": "tab",
        "label": "Config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dcec61fa9fead32c",
        "type": "tab",
        "label": "MQTT",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c89b5b8c.d896e8",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true
    },
    {
        "id": "5307987e.2c1e78",
        "type": "serial-port",
        "d": true,
        "serialport": "/dev/ttyAMA0",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "9da059e2.ca7158",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "3067d539.860f0a",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "36eddf52.c4acb",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "56d7d80c.b1d858",
        "type": "mqtt-broker",
        "name": "",
        "broker": "112.78.4.162",
        "port": "1883",
        "tls": "c89b5b8c.d896e8",
        "clientid": "client_id_115",
        "usetls": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b0c03cab.5bc77",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#2196f3",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#2196f3",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#6ab8f7",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#2196f3",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "DTP IOT Gateway",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 40,
                "sy": 40,
                "gx": 5,
                "gy": 5,
                "cx": 5,
                "cy": 5,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d45a3bb6.acac58",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7dd101e5.7fe98",
        "type": "ui_tab",
        "name": "Config",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b609823b.1cfac",
        "type": "ui_group",
        "name": "Graph",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": 18,
        "collapse": false
    },
    {
        "id": "d7646308.d87ee",
        "type": "ui_group",
        "name": "SMS & Email Setting",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 11,
        "collapse": false
    },
    {
        "id": "10b12846.ce2598",
        "type": "ui_group",
        "name": "HMI Layout",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": 27,
        "collapse": false
    },
    {
        "id": "9f0ff9d.41bd708",
        "type": "ui_group",
        "name": "IO Setting",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "18",
        "collapse": false
    },
    {
        "id": "12352617.d7c5aa",
        "type": "ui_group",
        "d": true,
        "name": "CPCOE Setting",
        "tab": "",
        "order": 7,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "fd5b41cd.3fd",
        "type": "ui_group",
        "name": "Data Logging",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": 18,
        "collapse": false
    },
    {
        "id": "cd374444.e570d8",
        "type": "ui_group",
        "name": "System",
        "tab": "",
        "order": 11,
        "disp": true,
        "width": 11,
        "collapse": false
    },
    {
        "id": "f0b39781.ce6078",
        "type": "ui_group",
        "d": true,
        "name": "GSM Modem",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "bde1ef01.0c628",
        "type": "ui_group",
        "name": "Login",
        "tab": "",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "17eaf293.6cf0ad",
        "type": "ui_group",
        "name": "Login Account",
        "tab": "",
        "order": 9,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "c372558a.a01a18",
        "type": "ui_group",
        "name": "HMI Layout",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": 18,
        "collapse": false
    },
    {
        "id": "2e6b8dfa.333ac2",
        "type": "ui_group",
        "name": "FTP Setting",
        "tab": "",
        "order": 8,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "4fa1a852.cda198",
        "type": "ui_group",
        "name": "Delivered Logging File",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 18,
        "collapse": false
    },
    {
        "id": "cb4fff98.8a764",
        "type": "ui_group",
        "name": "In A Queue ",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 18,
        "collapse": false
    },
    {
        "id": "a67cb1e.095555",
        "type": "ui_group",
        "name": "IO Setting",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "e295301c.19e37",
        "type": "ui_group",
        "name": "IO Setting",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": 18,
        "collapse": false
    },
    {
        "id": "c314a420.e19028",
        "type": "ui_group",
        "name": "IO Setting",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": 18,
        "collapse": false
    },
    {
        "id": "73028ca5.930e44",
        "type": "ui_group",
        "name": "Network Setting",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "7a439f95.319a6",
        "type": "ui_group",
        "name": "MQTT Setting",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "755920f8.bb15c",
        "type": "ui_group",
        "name": "Dashboard",
        "tab": "d45a3bb6.acac58",
        "order": 1,
        "disp": false,
        "width": 18,
        "collapse": false
    },
    {
        "id": "b9e20632.08b988",
        "type": "ui_group",
        "name": "Email Setting",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "dafef00c.ac23f",
        "type": "ui_group",
        "name": "IO Setting",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": 18,
        "collapse": false
    },
    {
        "id": "3cb41fb4.d0e77",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "17",
        "collapse": false
    },
    {
        "id": "589f7082.952c",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8de544a7.b1fb08",
        "type": "ui_group",
        "name": "LOG_MQTT",
        "tab": "7dd101e5.7fe98",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "77311175.30068",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "9f25bab2.0ac358",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "9e3dd2.1526323",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "ea80b6ea.8c7be8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "633fb712.df5278",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "29ef8b41.77ad64",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "c59da31e.d5d6b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 37,
        "width": 4,
        "height": 1
    },
    {
        "id": "100c0bf9.ec9f44",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 42,
        "width": 12,
        "height": 1
    },
    {
        "id": "efa56674.79a348",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 43,
        "width": 12,
        "height": 1
    },
    {
        "id": "2f9557a1.48f628",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 44,
        "width": 12,
        "height": 1
    },
    {
        "id": "6ce7ab5a.430d84",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "85d0418d.bf696",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "28ad2b84.0cbea4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "8d549e40.c5f15",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "dc7524f3.3d12a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "d28d2b9.05587d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "f9f93e51.4f482",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "be4dfe95.7a825",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 37,
        "width": 4,
        "height": 1
    },
    {
        "id": "4ac8981b.ae2db8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 42,
        "width": 12,
        "height": 1
    },
    {
        "id": "6587ab22.9fe844",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 43,
        "width": 12,
        "height": 1
    },
    {
        "id": "74e73cb7.db4924",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 44,
        "width": 12,
        "height": 1
    },
    {
        "id": "a436196b.08d688",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "337637c8.1b7e78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "4ee71fb4.000e4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "43c3de7d.61cdc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "d3be9dbd.60f74",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "c0d2f8a1.9f13d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "540d7c8f.6e12a4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "66bed7e5.5b7488",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "c59aabee.8c98d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "cff152d9.db0d9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "5a6b3ca0.a715e4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "ba2f145f.b032d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "938636e7.f155e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "5997c59.5afaa3c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "a91fa67e.582fe8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "ef2f8687.62e608",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "13bba8ac.039b37",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "cbc9dc6e.ef4e3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "d2037ab.973e888",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "238f41cb.aa03ae",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "441ae0d6.26e8f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "cc597757.cd71a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "847fd01.001523",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "e6160a44.2bae28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "2684efa6.7f5a9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "d24c08c8.1810b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "606e1129.ecaa2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "1da3195f.e51057",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "85c765f0.8edf58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "7933b9c3.35df38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 37,
        "width": 4,
        "height": 1
    },
    {
        "id": "93ff5ade.83f1b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 42,
        "width": 12,
        "height": 1
    },
    {
        "id": "52981b71.568234",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 43,
        "width": 12,
        "height": 1
    },
    {
        "id": "10aed5a4.833a7a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 44,
        "width": 12,
        "height": 1
    },
    {
        "id": "b0b7ffe5.51685",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "ecd6f899.b22ef8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 24,
        "height": 1
    },
    {
        "id": "e29fb97e.1a8058",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 27,
        "height": 1
    },
    {
        "id": "93dc9d3b.97dae",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2be0df9b.c837a",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "521a7447.60b68c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2be0df9b.c837a",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "a8cfd6d2.69eed8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 1,
        "width": 9,
        "height": 1
    },
    {
        "id": "1ceea7cd.5a0188",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "d56e9ac2.c9f4f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "2103d98.1eb8926",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "e36da468.436358",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "49304f51.521c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "8d76384e.c99658",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 16,
        "width": 4,
        "height": 1
    },
    {
        "id": "2d6375d3.1d5e1a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "c9fbb2d4.1362e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "4166934c.bae5cc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "3b218f68.3eb3b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d8f5c10.136ab4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "5f8c8432.e55b9c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "c75a46.885f75b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "ecf94967.787818",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "c8b52649.4dd168",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "6ca2ac92.7100a4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "7ad56dbe.0a9574",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "87228123.2373d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "4791ad75.84ecb4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "d15c4a24.0cb028",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "259dd2a.268872e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "de83901b.2e599",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "a419d4f1.e3d558",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "a1aa39b6.bed638",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "5a4e72c0.a0eb9c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "9c501ecf.cc002",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "34def8b.a473b08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "209f93b.2685e6c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "4ac48a97.b67474",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "913debb4.503ae8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "ec11ae6f.e5337",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "7efd4c08.237194",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "13cc9703.2cab69",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "57a0d275.cadefc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "a9dfabdb.bdb968",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "d9b62e4f.b89bb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "aa9c79b6.40ebc8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "1c7b9cdf.876993",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "d98a7cdf.01fb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "990eceba.658a1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9442c5a9.f86c88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "1c2c2a23.a42336",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "980ef021.28a84",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "2059b749.d60538",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "6f9f0bb0.2082b4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "4f9dc201.67146c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "96db476e.1c6258",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "c5393c39.3a726",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "fe191b5b.f87a78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "57601d7c.ed3ee4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "b1fd46dc.29c358",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "ad6e5e98.397e4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "3c9f8040.dc8d5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "99ac8e11.2083d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "f06c38aa.ce5c48",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "21246092.a8a18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "2e2b9fff.99333",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "21653e5d.b42832",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "a43aab57.43e008",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "9f6cea34.c70e88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "51ef0ad6.20bd64",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "edc0a046.988f4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "ecbbfea1.3b583",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "8329413.8b624c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "4ea33755.05bc08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "618bc44e.d2fcdc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "17845272.41e96e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "3ea39a92.19cbb6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "937f7175.1ddaa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "9256027f.8328a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "a656cf4f.59231",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "9ce70b52.32d188",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "7d3fc08f.9ef41",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 37,
        "width": 4,
        "height": 1
    },
    {
        "id": "14e50deb.668872",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 42,
        "width": 12,
        "height": 1
    },
    {
        "id": "4196d451.56c4dc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 43,
        "width": 12,
        "height": 1
    },
    {
        "id": "7b24b65d.3365d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 44,
        "width": 12,
        "height": 1
    },
    {
        "id": "cba613e2.5d334",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "39126513.e81f4a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "e39b5e22.7b07a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "14ebe79d.b077b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "dc2a1e56.d98e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "97a394bf.2c6ea8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "16194abc.0bb215",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "a98dac50.c4d76",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 37,
        "width": 4,
        "height": 1
    },
    {
        "id": "eb49963.318c368",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 42,
        "width": 12,
        "height": 1
    },
    {
        "id": "b3b68c29.6c1e7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 43,
        "width": 12,
        "height": 1
    },
    {
        "id": "28af292c.321666",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 44,
        "width": 12,
        "height": 1
    },
    {
        "id": "fc4364ce.b8d528",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "901a0e8a.5c383",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "ea952b0d.ae5958",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "aefddda9.368cc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "9f53f3b6.d6fa2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "98dd9153.4e71e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "7a8512fa.9c62dc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "e444e20c.53dc4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "213feb80.db69b4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "754f6360.f2c1dc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "16d79c86.37a5d3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "2fe28099.c4bae",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "eb7783a4.998ed",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "156b4fa4.e6f28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "ee8c7421.3301d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "267b73bc.11f06c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "6fd9054e.ecf43c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "5e22ae2f.a3d57",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "2c6ede3b.fe6c82",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "ffbb8d1b.efccb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "7075faa.9dc3504",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "70009f12.08635",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "a1f8b5ae.5ca458",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "1f4ab19e.469d2e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "636bebbc.4ff5b4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "973d91d6.a2ae6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "dbb01070.f1c4b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "771a6d0b.cc3c14",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "1d43fb64.b65ca5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "952637ff.6a0338",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 37,
        "width": 4,
        "height": 1
    },
    {
        "id": "9042e830.be7e88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 42,
        "width": 12,
        "height": 1
    },
    {
        "id": "3078a26b.0885be",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 43,
        "width": 12,
        "height": 1
    },
    {
        "id": "b810358.6ab12c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "96a338ec.4b7488",
        "order": 44,
        "width": 12,
        "height": 1
    },
    {
        "id": "16590a5c.2b1426",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "3cf1f043.16fd5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 24,
        "height": 1
    },
    {
        "id": "5b6ac0e4.28f48",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 27,
        "height": 1
    },
    {
        "id": "86649dc4.78d8d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2be0df9b.c837a",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "916bb099.399a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2be0df9b.c837a",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "aee9b374.1e416",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 1,
        "width": 9,
        "height": 1
    },
    {
        "id": "74affc96.e71124",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "85161ebf.1b62a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "a7f270ac.efe28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "bc31b53d.ef6328",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "9baec901.3e53e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "4d9548d4.c6b8b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "106adb71.007465",
        "order": 16,
        "width": 4,
        "height": 1
    },
    {
        "id": "52001309.25f38c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "e09c824.2b2e78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "374822d7.4c67ce",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "c7f4effd.a23e5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "b2bb7f8.22d9a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "e954ca4b.2e9388",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "68d84d15.e5ab04",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "10185b24.1920e5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b98a8a7.856d38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "5db976cd.157788",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "3c4d8a95.9c9266",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "98f361f2.76675",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "9194106a.c3bed",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "6da830ca.30e35",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "2bceddb0.b93732",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "2935c4df.7cdf3c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "580d28b6.945438",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "b78df38d.b2c0e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "f43b3037.82fe9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "25a4e8cc.fe7038",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "c6ecb42f.1f1b68",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "b641a8aa.5cca08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "9c292fd9.6bed1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "91192177.524d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "7e8e90e7.fea35",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "89e2eecd.606e2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "704c7e1.ca7fe8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "6d30cbc8.401a64",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "63fb0e14.3a735",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "c88f8c45.0c3f4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd16c88e.312918",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "7f84afc8.9a675",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd16c88e.312918",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "2632b923.4d4fa6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4fa1a852.cda198",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "51381411.cb243c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4fa1a852.cda198",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "a4fd53a8.4a8cb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4fa1a852.cda198",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "4d642371.f4d7ec",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cb4fff98.8a764",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "702b9933.f50ed8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cb4fff98.8a764",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "76746a97.012864",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cb4fff98.8a764",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "a0b04b4e.3ec768",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "c46f1225.92425",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "e295301c.19e37",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "ae452795.865418",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fd5b41cd.3fd",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "819613d7.f690a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fd5b41cd.3fd",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "5d2b1ce6.9353b4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b609823b.1cfac",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "b2a3d26b.3a56e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dafef00c.ac23f",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "e1d75913.32c788",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dafef00c.ac23f",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "d065c506.526a28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9f0ff9d.41bd708",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "551ceaca.07bf74",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9f0ff9d.41bd708",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "ad3fe050.dfda8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c314a420.e19028",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "4b8d4168.10e24",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c314a420.e19028",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "f523ba29.184838",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3cb41fb4.d0e77",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "74ebbca7.e7e194",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f0b39781.ce6078",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "329e3f67.7a53e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f0b39781.ce6078",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "e63cc540.ac8e98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f0b39781.ce6078",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b8a07ff.25a558",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7a439f95.319a6",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "685ecd4c.687374",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7a439f95.319a6",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "c3e05d00.a58c2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a67cb1e.095555",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "9d52386e.3ca958",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a67cb1e.095555",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "6f954262.de7b9c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a67cb1e.095555",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "4d40837f.c1bf8c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a67cb1e.095555",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "84c0514c.a642",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9e20632.08b988",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "6d9d4948.ce61e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9e20632.08b988",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "4453975a.d9a438",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "73028ca5.930e44",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "9c63456b.bebbc8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "73028ca5.930e44",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "7bca2148.79747",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "12352617.d7c5aa",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "b92afabd.4eafb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "12352617.d7c5aa",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "aef13ed8.7417b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "12352617.d7c5aa",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "d784a980.e74798",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "12352617.d7c5aa",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "d009a953.27fb58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "12352617.d7c5aa",
        "order": 13,
        "width": 3,
        "height": 1
    },
    {
        "id": "492e1a9d.fd0554",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "12352617.d7c5aa",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "cadd74a8.2a3a58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2e6b8dfa.333ac2",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "290baf56.c7f59",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2e6b8dfa.333ac2",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "1bf1ab7c.4aa875",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2e6b8dfa.333ac2",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "79da27ba.61a5e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2e6b8dfa.333ac2",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "5152c667.a1a488",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2e6b8dfa.333ac2",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "ba663526.231b18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2e6b8dfa.333ac2",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "bebd06ab.5443a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "17eaf293.6cf0ad",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "6c2c62d2.8279cc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "17eaf293.6cf0ad",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "e5ca186e.d06068",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "17eaf293.6cf0ad",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "be59266f.bfd708",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "17eaf293.6cf0ad",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9abd8382.c2634",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "17eaf293.6cf0ad",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "c53fe1c3.f16d1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "17eaf293.6cf0ad",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "a4d81bf7.0fd468",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "17eaf293.6cf0ad",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "4de1b258.bf0fac",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bde1ef01.0c628",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "18f8dd2.6b12523",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bde1ef01.0c628",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "ac5d2fc0.ba0fc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bde1ef01.0c628",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "138f037d.a8604d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bde1ef01.0c628",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "e8bdc6ae.f6ae28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bde1ef01.0c628",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "a3af5eb1.981e2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd374444.e570d8",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "2ae66ac4.bec886",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd374444.e570d8",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "fa6fb0e.cf70a5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd374444.e570d8",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "c6de5bc7.76d2f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd374444.e570d8",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "e53a3937.6c8588",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "LOG_MQTT",
        "name": "LOG_MQTT",
        "usetls": false,
        "tls": "c89b5b8c.d896e8",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "afffbe6c.ed6ac",
        "type": "mui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "m-base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "m-page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "m-group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "m-widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "m-widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e3af9727.8ec418",
        "type": "mui_tab",
        "name": "DashBoard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "652e0fee.81313",
        "type": "mui_group",
        "name": "Default",
        "tab": "e3af9727.8ec418",
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4d80b3d1.de10ec",
        "type": "mongodb3",
        "uri": "mongodb://localhost:27017/test",
        "name": "test",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "e21bf349.670c7",
        "type": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "db": "test",
        "name": ""
    },
    {
        "id": "126e49fc93f455f0",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "Pi",
        "name": "LOG",
        "usetls": false,
        "tls": "c89b5b8c.d896e8",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "56ef3740.c3fe38",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e7bc72f8cfbe6412",
        "type": "ui_tab",
        "name": "PressureSetting",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b46fb8a92ad04724",
        "type": "ui_group",
        "name": "Default",
        "tab": "e7bc72f8cfbe6412",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ee358372b50a4ab6",
        "type": "modbus-client",
        "name": "",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/USB3",
        "serialType": "RTU",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 3000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "17206477762e1941",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "026605d636d3c999",
        "type": "ui_group",
        "name": "FTP1",
        "tab": "7dd101e5.7fe98",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5e3211a41fa33eb7",
        "type": "ui_group",
        "name": "FTP2",
        "tab": "7dd101e5.7fe98",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3b1553f377083492",
        "type": "ui_group",
        "name": "PRV",
        "tab": "7dd101e5.7fe98",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "33dbcf6323572d39",
        "type": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "db": "test",
        "name": ""
    },
    {
        "id": "250e2670fc13cb8a",
        "type": "modbus-client",
        "name": "SanBay",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "192.168.3.117",
        "tcpPort": "502",
        "tcpType": "TPC-RTU-BUFFERED",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    },
    {
        "id": "08b7f0f0ede521a4",
        "type": "mongodb3",
        "uri": "mongodb://localhost:27017/test",
        "name": "test",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "2c7693233d97e315",
        "type": "modbus-client",
        "name": "MB",
        "clienttype": "tcp",
        "bufferCommands": false,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1000",
        "clientTimeout": "3000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "3000",
        "parallelUnitIdsAllowed": false
    },
    {
        "id": "742fcc0cd373db6e",
        "type": "modbus-client",
        "name": "MB",
        "clienttype": "tcp",
        "bufferCommands": false,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1000,
        "clientTimeout": 3000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 3000,
        "parallelUnitIdsAllowed": false
    },
    {
        "id": "c9b25ca7e3205258",
        "type": "modbus-client",
        "name": "MB",
        "clienttype": "tcp",
        "bufferCommands": false,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1000,
        "clientTimeout": 3000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 3000,
        "parallelUnitIdsAllowed": false
    },
    {
        "id": "346b375f3549941b",
        "type": "modbus-client",
        "name": "MB",
        "clienttype": "tcp",
        "bufferCommands": false,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1000",
        "clientTimeout": "3000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "3000",
        "parallelUnitIdsAllowed": false
    },
    {
        "id": "32f53e24b3435ba5",
        "type": "modbus-client",
        "name": "local",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    },
    {
        "id": "e917f1dbdbcad22e",
        "type": "modbus-client",
        "name": "local",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    },
    {
        "id": "b28b270d762da386",
        "type": "ui_tab",
        "name": "Config",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ccd36c9f1c19661f",
        "type": "ui_group",
        "name": "Config_FTP1",
        "tab": "b28b270d762da386",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7c613b90f28b3b65",
        "type": "ui_group",
        "name": "Config_FTP2",
        "tab": "b28b270d762da386",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c7655e2a46c41395",
        "type": "mui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "m-base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "m-page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "m-group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "m-widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "m-widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e0bd02aa4af48cec",
        "type": "mui_tab",
        "name": "DashBoard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c75e2a8314c5b39d",
        "type": "mui_group",
        "name": "Default",
        "tab": "e0bd02aa4af48cec",
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8071bf604d2799ec",
        "type": "ui_tab",
        "name": "DashBoard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "71235cca6cca5636",
        "type": "ui_group",
        "name": "Test",
        "tab": "8071bf604d2799ec",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4aacf30784079c94",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "test",
        "name": "test",
        "usetls": true,
        "tls": "34a48308ca4afb11",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "34a48308ca4afb11",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "40eec285a77eca5c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "test 1.8 flux",
        "usetls": false,
        "tls": "467f20f411513f85",
        "influxdbVersion": "1.8-flux",
        "url": "https://localhost:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "467f20f411513f85",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "03904c170d14a49c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "iotDB",
        "name": "iotDB",
        "usetls": false,
        "tls": "2a1fe39e09e424d2",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "2a1fe39e09e424d2",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true
    },
    {
        "id": "925e0fd55a285c81",
        "type": "mqtt-broker",
        "name": "",
        "broker": "112.78.4.162",
        "port": "1883",
        "clientid": "client_test",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "a6a5b627dec1b84c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "iotDB",
        "name": "iotDB",
        "usetls": false,
        "tls": "da4603205fe1c507",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "da4603205fe1c507",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true
    },
    {
        "id": "ca4eb5a3c2becd05",
        "type": "ui_tab",
        "name": "TongQuan",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "642488e289111dfd",
        "type": "ui_group",
        "name": "TongQuan",
        "tab": "ca4eb5a3c2becd05",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1e7cfc659e46934c",
        "type": "ui_tab",
        "name": "PressureSetting",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4d3ce6c0ec67f74b",
        "type": "json",
        "z": "0cde011e2de50d9f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 970,
        "y": 1820,
        "wires": [
            [
                "4208512de96480e0"
            ]
        ]
    },
    {
        "id": "4208512de96480e0",
        "type": "file",
        "z": "0cde011e2de50d9f",
        "name": "Write Config.txt",
        "filename": "/home/pi/Config.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1300,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "ef7f27f8372ca3fd",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Write Config.PRV",
        "func": "let TempConfig = global.get(\"TempConfig\")\nlet Config = global.get(\"Config\")\n\nConfig.PRV.SS = TempConfig.PRV.SS\nConfig.PRV.M0 = TempConfig.PRV.M0\nConfig.PRV.A0 = TempConfig.PRV.A0\nConfig.PRV.A1 = TempConfig.PRV.A1\nConfig.PRV.A2 = TempConfig.PRV.A2\nConfig.PRV.A3 = TempConfig.PRV.A3\nConfig.PRV.A4 = TempConfig.PRV.A4\nConfig.PRV.A5 = TempConfig.PRV.A5\nConfig.PRV.A6 = TempConfig.PRV.A6\nConfig.PRV.A7 = TempConfig.PRV.A7\nConfig.PRV.A8 = TempConfig.PRV.A8\nConfig.PRV.A9 = TempConfig.PRV.A9\nConfig.PRV.A10 = TempConfig.PRV.A10\nConfig.PRV.A11 = TempConfig.PRV.A11\nConfig.PRV.A12 = TempConfig.PRV.A12\nConfig.PRV.A13 = TempConfig.PRV.A13\nConfig.PRV.A14 = TempConfig.PRV.A14\nConfig.PRV.A15 = TempConfig.PRV.A15\nConfig.PRV.A16 = TempConfig.PRV.A16\nConfig.PRV.A17 = TempConfig.PRV.A17\nConfig.PRV.A18 = TempConfig.PRV.A18\nConfig.PRV.A19 = TempConfig.PRV.A19\nConfig.PRV.A20 = TempConfig.PRV.A20\nConfig.PRV.A21 = TempConfig.PRV.A21\nConfig.PRV.A22 = TempConfig.PRV.A22\nConfig.PRV.A23 = TempConfig.PRV.A23\nConfig.PRV.Man_Auto = TempConfig.PRV.Man_Auto\nConfig.PRV.P1_ValueTest = TempConfig.PRV.P1_ValueTest\nConfig.PRV.P2_ValueTest = TempConfig.PRV.P2_ValueTest\nConfig.PRV.P1_EnableTest = TempConfig.PRV.P1_EnableTest\nConfig.PRV.P2_EnableTest = TempConfig.PRV.P2_EnableTest\n\nglobal.set(\"Config\",Config)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1820,
        "wires": [
            [
                "d982c2c3a2f05933"
            ]
        ]
    },
    {
        "id": "839a91e01c8b24eb",
        "type": "ui_switch",
        "z": "0cde011e2de50d9f",
        "name": "Man_Auto",
        "label": "Man_Auto",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1030,
        "y": 560,
        "wires": [
            [
                "7bc0c1f1b53c8264"
            ]
        ]
    },
    {
        "id": "42f1c873be1f573c",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.Man_Auto\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 560,
        "wires": [
            [
                "839a91e01c8b24eb"
            ]
        ]
    },
    {
        "id": "7bc0c1f1b53c8264",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.Man_Auto = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "2b85cd4407f9b108",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 640,
        "wires": [
            [
                "26a95c91685891ea"
            ]
        ]
    },
    {
        "id": "48225731f20ee498",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A0 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "d982c2c3a2f05933",
        "type": "delay",
        "z": "0cde011e2de50d9f",
        "name": "delay 1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 600,
        "y": 1820,
        "wires": [
            [
                "8be23d37ef5e5ffa"
            ]
        ]
    },
    {
        "id": "8be23d37ef5e5ffa",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Content Config.txt",
        "func": "msg.payload = global.get(\"Config\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1820,
        "wires": [
            [
                "4d3ce6c0ec67f74b"
            ]
        ]
    },
    {
        "id": "e39131aae4df29dd",
        "type": "ui_button",
        "z": "0cde011e2de50d9f",
        "name": "Update_Config.PRV",
        "group": "3b1553f377083492",
        "order": 33,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1820,
        "wires": [
            [
                "ef7f27f8372ca3fd"
            ]
        ]
    },
    {
        "id": "2f73fac7ed5ee122",
        "type": "encrypt",
        "z": "0cde011e2de50d9f",
        "name": "",
        "key": "Rabbit",
        "x": 1120,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "816880637a0a81dc",
        "type": "ui_button",
        "z": "0cde011e2de50d9f",
        "name": "Load_Config.PRV",
        "group": "3b1553f377083492",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Load",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1060,
        "wires": [
            [
                "bcee68b234678d56"
            ]
        ]
    },
    {
        "id": "bcee68b234678d56",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Load to Config",
        "func": "msg.payload = global.get(\"Config\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1060,
        "wires": [
            [
                "42f1c873be1f573c",
                "2b85cd4407f9b108",
                "3ba57e5c7c85dda9",
                "11f0634da36f6193",
                "e66498708e404c22",
                "5715a8fb087f0553",
                "340ebbdf02c52966",
                "f25bd10915be6a61",
                "7a7cf2114dddec0e",
                "20a9f2f67fd668a4",
                "5f33c377b3ba5650",
                "82872eee47d7e9ed",
                "a2f34308b5fd087d",
                "41153ddc1d385de8",
                "b824298c94f7ade0",
                "84d3b1d1a705b271",
                "7a94a0d908a605b9",
                "2083b5a6959a9ff1",
                "40c3ab2df3c04315",
                "88935522f6a7e87c",
                "a7bd71f33837137e",
                "c7b0a099e26304fb",
                "378e914359b4dd8e",
                "bbf6bd62f0f142e3",
                "18a89c66419a1fe4",
                "ad9bc5dbd25adab1",
                "d818c1e308c11d42",
                "fcc4084f5df53137",
                "69c0a01a0e20e474",
                "1224c0970f20c291",
                "be22ceb937070f04"
            ]
        ]
    },
    {
        "id": "3ba57e5c7c85dda9",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.M0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 600,
        "wires": [
            [
                "d66cc3543ea9b1f4"
            ]
        ]
    },
    {
        "id": "2cf8b3892b4c6ad1",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.M0 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "11f0634da36f6193",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 680,
        "wires": [
            [
                "567140af6b6b5f0a"
            ]
        ]
    },
    {
        "id": "9e541f699a51c86e",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A1 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "e66498708e404c22",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A2\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 720,
        "wires": [
            [
                "7e7c870b99551691"
            ]
        ]
    },
    {
        "id": "51615674c2b20d61",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A2 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "5715a8fb087f0553",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A3\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 760,
        "wires": [
            [
                "828bf87cd5a5b299"
            ]
        ]
    },
    {
        "id": "8eeeab3243c5b5c2",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A3 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "340ebbdf02c52966",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A4\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 800,
        "wires": [
            [
                "1897dbf5d6c4ef34"
            ]
        ]
    },
    {
        "id": "66a01f343af88544",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A4 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "f25bd10915be6a61",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A5\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 840,
        "wires": [
            [
                "de3444978b116d6c"
            ]
        ]
    },
    {
        "id": "6b70c0388524ad29",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A5 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "7a7cf2114dddec0e",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A6\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 880,
        "wires": [
            [
                "e091264c0ec421f4"
            ]
        ]
    },
    {
        "id": "dea322d43247fb91",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A6 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "20a9f2f67fd668a4",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A7\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 920,
        "wires": [
            [
                "9a88fa9084e58653"
            ]
        ]
    },
    {
        "id": "04e31ba9c4ef9096",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A7 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "5f33c377b3ba5650",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A8\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 960,
        "wires": [
            [
                "79331e41338cbd38"
            ]
        ]
    },
    {
        "id": "28c99d7f0377e8bf",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A8 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "82872eee47d7e9ed",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A9\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1000,
        "wires": [
            [
                "88e409742d9ddbb4"
            ]
        ]
    },
    {
        "id": "d38664ddacbafcc1",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A9 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "a2f34308b5fd087d",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A10\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1040,
        "wires": [
            [
                "4e98d4e1496502c2"
            ]
        ]
    },
    {
        "id": "8e07baf007ccf88d",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A10 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "41153ddc1d385de8",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A11\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1080,
        "wires": [
            [
                "3f8e43d0b7e8cdad"
            ]
        ]
    },
    {
        "id": "b5c70c9d8c98f854",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A11 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "b824298c94f7ade0",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A12\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1120,
        "wires": [
            [
                "03668087365fb342"
            ]
        ]
    },
    {
        "id": "b5ef440f9ec59a70",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A12 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "84d3b1d1a705b271",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A13\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1160,
        "wires": [
            [
                "9136c202f7a7b514"
            ]
        ]
    },
    {
        "id": "71d83055d4f26a31",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A13 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "7a94a0d908a605b9",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A14\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1200,
        "wires": [
            [
                "b511b0f5a0bd6028"
            ]
        ]
    },
    {
        "id": "03f3ae5249eb79f0",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A14 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "2083b5a6959a9ff1",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A15\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1240,
        "wires": [
            [
                "13e123ac16b5e24c"
            ]
        ]
    },
    {
        "id": "fcde2ff5ec96fec0",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A15 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "40c3ab2df3c04315",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A16\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1280,
        "wires": [
            [
                "b5e0323927f22cdd"
            ]
        ]
    },
    {
        "id": "8b75f1aaf09483e5",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A16 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "88935522f6a7e87c",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A17\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1320,
        "wires": [
            [
                "cceedf75b13a8719"
            ]
        ]
    },
    {
        "id": "628bc265cf782f11",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A17 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "a7bd71f33837137e",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A18\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1360,
        "wires": [
            [
                "809af619140327e4"
            ]
        ]
    },
    {
        "id": "b1609c2d15d48689",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A18 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "c7b0a099e26304fb",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A19\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1400,
        "wires": [
            [
                "ef717d0169da8ba7"
            ]
        ]
    },
    {
        "id": "f265757ea3cb36a5",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A19 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "378e914359b4dd8e",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A20\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1440,
        "wires": [
            [
                "e9093c3df8678164"
            ]
        ]
    },
    {
        "id": "6ebf97b6120408b9",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A20 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "bbf6bd62f0f142e3",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A21\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1480,
        "wires": [
            [
                "c68633e53ff5feb8"
            ]
        ]
    },
    {
        "id": "936d0b530f994a91",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A21 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "18a89c66419a1fe4",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A22\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1520,
        "wires": [
            [
                "92bc025043770818"
            ]
        ]
    },
    {
        "id": "faf60f68aaed830e",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A22 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "ad9bc5dbd25adab1",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.A23\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1560,
        "wires": [
            [
                "5ff3c5d7f02bc37b"
            ]
        ]
    },
    {
        "id": "b8b3456529e1944c",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.A23 = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "0675596e20690786",
        "type": "ui_switch",
        "z": "0cde011e2de50d9f",
        "name": "P1_EnableTest",
        "label": "P1_EnableTest",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 29,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1040,
        "y": 1600,
        "wires": [
            [
                "65472a0efe8e6b40"
            ]
        ]
    },
    {
        "id": "d818c1e308c11d42",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.P1_EnableTest\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1600,
        "wires": [
            [
                "0675596e20690786"
            ]
        ]
    },
    {
        "id": "65472a0efe8e6b40",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.P1_EnableTest = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "fcc4084f5df53137",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.P1_ValueTest\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1640,
        "wires": [
            [
                "23002ab8820e2462"
            ]
        ]
    },
    {
        "id": "5ffa89e14175337b",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.P1_ValueTest = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "deca5f86c2efe66a",
        "type": "ui_switch",
        "z": "0cde011e2de50d9f",
        "name": "P2_EnableTest",
        "label": "P2_EnableTest",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 31,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1040,
        "y": 1680,
        "wires": [
            [
                "45914eb0be4a88f5"
            ]
        ]
    },
    {
        "id": "69c0a01a0e20e474",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.P2_EnableTest\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1680,
        "wires": [
            [
                "deca5f86c2efe66a"
            ]
        ]
    },
    {
        "id": "45914eb0be4a88f5",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.P2_EnableTest = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "1224c0970f20c291",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.P2_ValueTest\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1720,
        "wires": [
            [
                "165fecc35d7e72a6"
            ]
        ]
    },
    {
        "id": "b970e42695232921",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.P2_ValueTest = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "d66cc3543ea9b1f4",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "M0",
        "label": "M0",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 600,
        "wires": [
            [
                "2cf8b3892b4c6ad1"
            ]
        ]
    },
    {
        "id": "26a95c91685891ea",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A0",
        "label": "A0",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 640,
        "wires": [
            [
                "48225731f20ee498"
            ]
        ]
    },
    {
        "id": "567140af6b6b5f0a",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A1",
        "label": "A1",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 680,
        "wires": [
            [
                "9e541f699a51c86e"
            ]
        ]
    },
    {
        "id": "7e7c870b99551691",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A2",
        "label": "A2",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 720,
        "wires": [
            [
                "51615674c2b20d61"
            ]
        ]
    },
    {
        "id": "828bf87cd5a5b299",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A3",
        "label": "A3",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 8,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 760,
        "wires": [
            [
                "8eeeab3243c5b5c2"
            ]
        ]
    },
    {
        "id": "1897dbf5d6c4ef34",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A4",
        "label": "A4",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 9,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 800,
        "wires": [
            [
                "66a01f343af88544"
            ]
        ]
    },
    {
        "id": "de3444978b116d6c",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A5",
        "label": "A5",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 10,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 840,
        "wires": [
            [
                "6b70c0388524ad29"
            ]
        ]
    },
    {
        "id": "e091264c0ec421f4",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A6",
        "label": "A6",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 11,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 880,
        "wires": [
            [
                "dea322d43247fb91"
            ]
        ]
    },
    {
        "id": "9a88fa9084e58653",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A7",
        "label": "A7",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 12,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 920,
        "wires": [
            [
                "04e31ba9c4ef9096"
            ]
        ]
    },
    {
        "id": "79331e41338cbd38",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A8",
        "label": "A8",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 13,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 960,
        "wires": [
            [
                "28c99d7f0377e8bf"
            ]
        ]
    },
    {
        "id": "88e409742d9ddbb4",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A9",
        "label": "A9",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1000,
        "wires": [
            [
                "d38664ddacbafcc1"
            ]
        ]
    },
    {
        "id": "4e98d4e1496502c2",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A10",
        "label": "A10",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 15,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1040,
        "wires": [
            [
                "8e07baf007ccf88d"
            ]
        ]
    },
    {
        "id": "3f8e43d0b7e8cdad",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A11",
        "label": "A11",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 16,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1080,
        "wires": [
            [
                "b5c70c9d8c98f854"
            ]
        ]
    },
    {
        "id": "03668087365fb342",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A12",
        "label": "A12",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 17,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1120,
        "wires": [
            [
                "b5ef440f9ec59a70"
            ]
        ]
    },
    {
        "id": "9136c202f7a7b514",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A13",
        "label": "A13",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 18,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1160,
        "wires": [
            [
                "71d83055d4f26a31"
            ]
        ]
    },
    {
        "id": "b511b0f5a0bd6028",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A14",
        "label": "A14",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 19,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1200,
        "wires": [
            [
                "03f3ae5249eb79f0"
            ]
        ]
    },
    {
        "id": "13e123ac16b5e24c",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A15",
        "label": "A15",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 20,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1240,
        "wires": [
            [
                "fcde2ff5ec96fec0"
            ]
        ]
    },
    {
        "id": "b5e0323927f22cdd",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A16",
        "label": "A16",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 21,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1280,
        "wires": [
            [
                "8b75f1aaf09483e5"
            ]
        ]
    },
    {
        "id": "cceedf75b13a8719",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A17",
        "label": "A17",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 22,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1320,
        "wires": [
            [
                "628bc265cf782f11"
            ]
        ]
    },
    {
        "id": "809af619140327e4",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A18",
        "label": "A18",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 23,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1360,
        "wires": [
            [
                "b1609c2d15d48689"
            ]
        ]
    },
    {
        "id": "ef717d0169da8ba7",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A19",
        "label": "A19",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 24,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1400,
        "wires": [
            [
                "f265757ea3cb36a5"
            ]
        ]
    },
    {
        "id": "e9093c3df8678164",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A20",
        "label": "A20",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 25,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1440,
        "wires": [
            [
                "6ebf97b6120408b9"
            ]
        ]
    },
    {
        "id": "c68633e53ff5feb8",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A21",
        "label": "A21",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 26,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1480,
        "wires": [
            [
                "936d0b530f994a91"
            ]
        ]
    },
    {
        "id": "92bc025043770818",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A22",
        "label": "A22",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 27,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1520,
        "wires": [
            [
                "faf60f68aaed830e"
            ]
        ]
    },
    {
        "id": "5ff3c5d7f02bc37b",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "A23",
        "label": "A23",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 28,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 1560,
        "wires": [
            [
                "b8b3456529e1944c"
            ]
        ]
    },
    {
        "id": "23002ab8820e2462",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "P1_ValueTest",
        "label": "P1_ValueTest",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 30,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1040,
        "y": 1640,
        "wires": [
            [
                "5ffa89e14175337b"
            ]
        ]
    },
    {
        "id": "165fecc35d7e72a6",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "P2_ValueTest",
        "label": "P2_ValueTest",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 32,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1040,
        "y": 1720,
        "wires": [
            [
                "b970e42695232921"
            ]
        ]
    },
    {
        "id": "645e6ddafed50915",
        "type": "inject",
        "z": "0cde011e2de50d9f",
        "name": "1s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "56abb4760cda2398",
                "cb8a4d371f8e754a",
                "68d892688b5a8fb5",
                "248a05047c68128b",
                "b245af7bd25b935b",
                "d54b6a813cfdfd40",
                "38ef67de22bd20cc",
                "265bf36d68d18b72",
                "45dc6ae97c963d7d",
                "1955f8b04c07d7eb",
                "eedff5628df55b14",
                "229ac148b90ef2f9",
                "51f55e021d428a51"
            ]
        ]
    },
    {
        "id": "56abb4760cda2398",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Test_P",
        "func": "let Config = global.get(\"Config\")\nlet P1_EnableTest = Config.PRV.P1_EnableTest\nlet P2_EnableTest = Config.PRV.P2_EnableTest\nlet P1_ValueTest = Config.PRV.P1_ValueTest\nlet P2_ValueTest = Config.PRV.P2_ValueTest\n\nif (P1_EnableTest) {\n    global.set(\"PRV.P1\",P1_ValueTest)\n}\n\nif (P2_EnableTest) {\n    global.set(\"PRV.P2\",P2_ValueTest)\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "d54b6a813cfdfd40",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Show_P1",
        "func": "msg.payload = global.get(\"PRV.P1\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 400,
        "wires": [
            [
                "d0780be6e344ed69"
            ]
        ]
    },
    {
        "id": "38ef67de22bd20cc",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Show_P2",
        "func": "msg.payload = global.get(\"PRV.P2\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 440,
        "wires": [
            [
                "c26cd8d119da88e5"
            ]
        ]
    },
    {
        "id": "d0780be6e344ed69",
        "type": "ui_text",
        "z": "0cde011e2de50d9f",
        "group": "3b1553f377083492",
        "order": 34,
        "width": 0,
        "height": 0,
        "name": "P1",
        "label": "P1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 470,
        "y": 400,
        "wires": []
    },
    {
        "id": "c26cd8d119da88e5",
        "type": "ui_text",
        "z": "0cde011e2de50d9f",
        "group": "3b1553f377083492",
        "order": 35,
        "width": 0,
        "height": 0,
        "name": "P2",
        "label": "P2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 470,
        "y": 440,
        "wires": []
    },
    {
        "id": "24b089ebf028d45a",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "SS",
        "label": "SS",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "f277cea9be731125"
            ]
        ]
    },
    {
        "id": "be22ceb937070f04",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = msg.payload.PRV.SS\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 520,
        "wires": [
            [
                "24b089ebf028d45a"
            ]
        ]
    },
    {
        "id": "f277cea9be731125",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.PRV.SS = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "32d3ac41113fe28f",
        "type": "inject",
        "z": "0cde011e2de50d9f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "fcc5603349cf7e9f"
            ]
        ]
    },
    {
        "id": "fcc5603349cf7e9f",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Local",
        "func": "global.set(\"PRV.L/R\",false)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "abef900ceb22b9a2",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Remote",
        "func": "global.set(\"PRV.L/R\",true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "da5d43a1a740f27d",
        "type": "inject",
        "z": "0cde011e2de50d9f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "abef900ceb22b9a2"
            ]
        ]
    },
    {
        "id": "cb8a4d371f8e754a",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Mode",
        "func": "let Config = global.get(\"Config\")\nlet Man_Auto = Config.PRV.Man_Auto\nlet L_R = global.get(\"PRV.L/R\")\n\nif (!(L_R)) {\n    global.set(\"PRV.Mode\",0)\n}\n\nif (L_R) {\n    if (!(Man_Auto)) {\n        global.set(\"PRV.Mode\",1)\n    } \n    if (Man_Auto) {\n        global.set(\"PRV.Mode\",2)    \n    }\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "9b214b6cb48ea27a",
        "type": "inject",
        "z": "0cde011e2de50d9f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "f2d339c599539fea"
            ]
        ]
    },
    {
        "id": "f2d339c599539fea",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "PRV",
        "func": "global.set(\"PRV.Acquy\",24.5)\nglobal.set(\"PRV.Solar\",29.2)\nglobal.set(\"PRV.Temp\",34.5)\nglobal.set(\"PRV.Humidity\",76.3)\nglobal.set(\"PRV.SV1\",false)\nglobal.set(\"PRV.SV2\",false)\nglobal.set(\"PRV.Fan\",false)\nglobal.set(\"PRV.P1\",3.6)\nglobal.set(\"PRV.P2\",3.1)\nglobal.set(\"PRV.P2set\",3.0)\nglobal.set(\"PRV.CloseFull\",false)\nglobal.set(\"PRV.OpenFull\",false)\nglobal.set(\"PRV.Cmd\",0)\nglobal.set(\"PRV.L/R\",true)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "68d892688b5a8fb5",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "P2set",
        "func": "let Config = global.get(\"Config\")\nlet Mode = global.get(\"PRV.Mode\")\nlet Now = global.get(\"Now\")\n\nif (Mode == 1) {\n    global.set(\"PRV.P2set\",Config.PRV.M0)\n}\n\nif (Mode == 2) {\n    switch(Now.Hour) {\n        case 1:\n            global.set(\"PRV.P2set\",Config.PRV.A1)\n        break;\n        case 2:\n            global.set(\"PRV.P2set\",Config.PRV.A2)\n        break;\n        case 3:\n            global.set(\"PRV.P2set\",Config.PRV.A3)\n        break;\n        case 4:\n            global.set(\"PRV.P2set\",Config.PRV.A4)\n        break;\n        case 5:\n            global.set(\"PRV.P2set\",Config.PRV.A5)\n        break;\n        case 6:\n            global.set(\"PRV.P2set\",Config.PRV.A6)\n        break;\n        case 7:\n            global.set(\"PRV.P2set\",Config.PRV.A7)\n        break;\n        case 8:\n            global.set(\"PRV.P2set\",Config.PRV.A8)\n        break;\n        case 9:\n            global.set(\"PRV.P2set\",Config.PRV.A9)\n        break;\n        case 10:\n            global.set(\"PRV.P2set\",Config.PRV.A10)\n        break;\n        case 11:\n            global.set(\"PRV.P2set\",Config.PRV.A11)\n        break;\n        case 12:\n            global.set(\"PRV.P2set\",Config.PRV.A12)\n        break;\n        case 13:\n            global.set(\"PRV.P2set\",Config.PRV.A13)\n        break;\n        case 14:\n            global.set(\"PRV.P2set\",Config.PRV.A14)\n        break;\n        case 15:\n            global.set(\"PRV.P2set\",Config.PRV.A15)\n        break;\n        case 16:\n            global.set(\"PRV.P2set\",Config.PRV.A16)\n        break;\n        case 17:\n            global.set(\"PRV.P2set\",Config.PRV.A17)\n        break;\n        case 18:\n            global.set(\"PRV.P2set\",Config.PRV.A18)\n        break;\n        case 19:\n            global.set(\"PRV.P2set\",Config.PRV.A19)\n        break;\n        case 20:\n            global.set(\"PRV.P2set\",Config.PRV.A20)\n        break;\n        case 21:\n            global.set(\"PRV.P2set\",Config.PRV.A21)\n        break;\n        case 22:\n            global.set(\"PRV.P2set\",Config.PRV.A22)\n        break;\n        case 23:\n            global.set(\"PRV.P2set\",Config.PRV.A23)\n        break;\n    }\n}\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "265bf36d68d18b72",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Show_P2set",
        "func": "msg.payload = global.get(\"PRV.P2set\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 480,
        "wires": [
            [
                "6721e72104d3a6bf"
            ]
        ]
    },
    {
        "id": "6721e72104d3a6bf",
        "type": "ui_text",
        "z": "0cde011e2de50d9f",
        "group": "3b1553f377083492",
        "order": 36,
        "width": 0,
        "height": 0,
        "name": "P2set",
        "label": "P2set",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 470,
        "y": 480,
        "wires": []
    },
    {
        "id": "e45b8d424b39aae3",
        "type": "inject",
        "z": "0cde011e2de50d9f",
        "name": "After 1s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 740,
        "y": 100,
        "wires": [
            [
                "37a81a4728ec05f2"
            ]
        ]
    },
    {
        "id": "5315ed61ca4465e4",
        "type": "delay",
        "z": "0cde011e2de50d9f",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 740,
        "y": 140,
        "wires": [
            [
                "37a81a4728ec05f2"
            ]
        ]
    },
    {
        "id": "37a81a4728ec05f2",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Fan_ON",
        "func": "let Temp = global.get(\"PRV.Temp\")\nlet Humidity = global.get(\"PRV.Humidity\")\nlet Now = global.get(\"Now\")\n\nif ((Now.Hour >= 9) && (Now.Hour < 17)) {\n    if ((Temp > 35.0) || (Humidity > 70.0)) {\n        global.set(\"PRV.Fan\",true)\n    }\n} \nelse {\n    global.set(\"PRV.Fan\",false)\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 140,
        "wires": [
            [
                "cfb75b82b1013bd0"
            ]
        ]
    },
    {
        "id": "cfb75b82b1013bd0",
        "type": "delay",
        "z": "0cde011e2de50d9f",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 1080,
        "y": 140,
        "wires": [
            [
                "048b5decfa1309bb"
            ]
        ]
    },
    {
        "id": "048b5decfa1309bb",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Fan_OFF",
        "func": "global.set(\"PRV.Fan\",false)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 140,
        "wires": [
            [
                "5315ed61ca4465e4"
            ]
        ]
    },
    {
        "id": "45dc6ae97c963d7d",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Show_Fan",
        "func": "msg.payload = global.get(\"PRV.Fan\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 520,
        "wires": [
            [
                "1cc4c5e5e8d3dc92"
            ]
        ]
    },
    {
        "id": "1cc4c5e5e8d3dc92",
        "type": "ui_text",
        "z": "0cde011e2de50d9f",
        "group": "3b1553f377083492",
        "order": 37,
        "width": 0,
        "height": 0,
        "name": "Fan",
        "label": "Fan",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 470,
        "y": 520,
        "wires": []
    },
    {
        "id": "51f55e021d428a51",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = global.get(\"PRV.Temp\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 640,
        "wires": [
            [
                "cc05123105ddcb2b"
            ]
        ]
    },
    {
        "id": "cc05123105ddcb2b",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "Temp",
        "label": "Temp",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 39,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "1",
        "x": 310,
        "y": 640,
        "wires": [
            [
                "e9c1e6489cf0e430"
            ]
        ]
    },
    {
        "id": "e9c1e6489cf0e430",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "global.set(\"PRV.Temp\",msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "229ac148b90ef2f9",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.payload = global.get(\"PRV.Humidity\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 680,
        "wires": [
            [
                "023d4934ea3a13e8"
            ]
        ]
    },
    {
        "id": "023d4934ea3a13e8",
        "type": "ui_numeric",
        "z": "0cde011e2de50d9f",
        "name": "Humidity",
        "label": "Humidity",
        "tooltip": "",
        "group": "3b1553f377083492",
        "order": 39,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "1",
        "x": 320,
        "y": 680,
        "wires": [
            [
                "98f8a94d7ae13a5c"
            ]
        ]
    },
    {
        "id": "98f8a94d7ae13a5c",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "global.set(\"PRV.Humidity\",msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "09646dceb3b9bec1",
        "type": "comment",
        "z": "0cde011e2de50d9f",
        "name": "Control_Program",
        "info": "",
        "x": 740,
        "y": 40,
        "wires": []
    },
    {
        "id": "25acb0377b1bafa4",
        "type": "delay",
        "z": "0cde011e2de50d9f",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1080,
        "y": 220,
        "wires": [
            [
                "c2e1a61f565570a3"
            ]
        ]
    },
    {
        "id": "9ceb5f2cbc95010e",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "msg.delay = 1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 220,
        "wires": [
            [
                "25acb0377b1bafa4"
            ]
        ]
    },
    {
        "id": "9d8e608e0bb94d7b",
        "type": "inject",
        "z": "0cde011e2de50d9f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 220,
        "wires": [
            [
                "9ceb5f2cbc95010e"
            ]
        ]
    },
    {
        "id": "c2e1a61f565570a3",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 220,
        "wires": [
            [
                "d62385ae1caae8d3"
            ]
        ]
    },
    {
        "id": "d62385ae1caae8d3",
        "type": "delay",
        "z": "0cde011e2de50d9f",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 1420,
        "y": 220,
        "wires": [
            [
                "9ceb5f2cbc95010e"
            ]
        ]
    },
    {
        "id": "248a05047c68128b",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Status",
        "func": "let CloseFull = global.get(\"PRV.CloseFull\")\nlet OpenFull = global.get(\"PRV.OpenFull\")\nlet Cmd = global.get(\"PRV.Cmd\")\nlet L_R = global.get(\"PRV.L/R\")\n\nif (CloseFull) {\n    global.set(\"PRV.Status\",0)\n}\n\nif (OpenFull) {\n    global.set(\"PRV.Status\",4)\n}\n\nif (Cmd == 1) {\n    global.set(\"PRV.Status\",1)\n}\n\nif (Cmd == 2) {\n    global.set(\"PRV.Status\",3)\n}\n\nif ((Cmd == 0) && !(OpenFull) && !(CloseFull) || !(L_R)) {\n    global.set(\"PRV.Status\",2)\n}\n\nmsg.payload = global.get(\"PRV.Status\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b245af7bd25b935b",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Alarm",
        "func": "let CloseFull = global.get(\"PRV.CloseFull\")\nlet OpenFull = global.get(\"PRV.OpenFull\")\n\nif (CloseFull) {\n    global.set(\"PRV.Alarm\",2)\n}\n\nif (OpenFull) {\n    global.set(\"PRV.Alarm\",1)\n}\n\nif (!(OpenFull || CloseFull)) {\n    global.set(\"PRV.Alarm\",0)\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "1955f8b04c07d7eb",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Show_Status",
        "func": "msg.payload = global.get(\"PRV.Status\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 560,
        "wires": [
            [
                "467898ee6a01e189"
            ]
        ]
    },
    {
        "id": "467898ee6a01e189",
        "type": "ui_text",
        "z": "0cde011e2de50d9f",
        "group": "3b1553f377083492",
        "order": 37,
        "width": 0,
        "height": 0,
        "name": "Status",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 470,
        "y": 560,
        "wires": []
    },
    {
        "id": "eedff5628df55b14",
        "type": "function",
        "z": "0cde011e2de50d9f",
        "name": "Show_Alarm",
        "func": "msg.payload = global.get(\"PRV.Alarm\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 600,
        "wires": [
            [
                "aa2583bfebecc503"
            ]
        ]
    },
    {
        "id": "aa2583bfebecc503",
        "type": "ui_text",
        "z": "0cde011e2de50d9f",
        "group": "3b1553f377083492",
        "order": 37,
        "width": 0,
        "height": 0,
        "name": "Alarm",
        "label": "Alarm",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 470,
        "y": 600,
        "wires": []
    },
    {
        "id": "c51f39db50068035",
        "type": "mongodb3 in",
        "z": "d978b0f7aca97104",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "Update_Threshold",
        "collection": "t_PumpControl",
        "operation": "updateOne",
        "x": 850,
        "y": 320,
        "wires": [
            [
                "b27dd096571adeeb"
            ]
        ]
    },
    {
        "id": "b27dd096571adeeb",
        "type": "http response",
        "z": "d978b0f7aca97104",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 380,
        "wires": []
    },
    {
        "id": "4018a4ed84a6160a",
        "type": "function",
        "z": "d978b0f7aca97104",
        "name": "f_update_threshhold",
        "func": "var obj= msg.req.body;//{\"_id\":\"2\", \"IsActive\":105}\nvar a= parseInt(obj._id);\nvar b= obj.Threshold;\nvar data =[];\nvar currentMsg = null, outMessage = null;\ncurrentMsg = {\"_id\":a};\ndata.push(currentMsg);\noutMessage= { $set: { \"Threshold\": b } };\ndata.push(outMessage);\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 420,
        "wires": [
            [
                "c51f39db50068035"
            ]
        ]
    },
    {
        "id": "9368a07e12c0fe49",
        "type": "http in",
        "z": "d978b0f7aca97104",
        "name": "HTTP_SET_Threshold",
        "url": "/set_Threshold",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 300,
        "wires": [
            [
                "fbb247eed2844842"
            ]
        ]
    },
    {
        "id": "3e018d5a5a300a16",
        "type": "http in",
        "z": "d978b0f7aca97104",
        "name": "HTTP_SETActive_pump",
        "url": "/setActive_pump",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 540,
        "wires": [
            [
                "d5066c55a4b204d5"
            ]
        ]
    },
    {
        "id": "9b44dabf609c4bfa",
        "type": "mongodb3 in",
        "z": "d978b0f7aca97104",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "",
        "collection": "t_PumpControl",
        "operation": "updateOne",
        "x": 890,
        "y": 520,
        "wires": [
            [
                "6fc3d868d4fc66c9"
            ]
        ]
    },
    {
        "id": "6fc3d868d4fc66c9",
        "type": "http response",
        "z": "d978b0f7aca97104",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 640,
        "wires": []
    },
    {
        "id": "6601778f245ab67f",
        "type": "function",
        "z": "d978b0f7aca97104",
        "name": "f_Update_active",
        "func": "var obj= msg.req.body;//{\"_id\":\"2\", \"IsActive\":105}\nvar a= parseInt(obj._id);\nvar b= obj.IsActive;\nvar data =[];\nvar currentMsg = null, outMessage = null;\ncurrentMsg = {\"_id\":a};\ndata.push(currentMsg);\noutMessage= { $set: { \"IsActive\": b } };\ndata.push(outMessage);\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 640,
        "wires": [
            [
                "9b44dabf609c4bfa"
            ]
        ]
    },
    {
        "id": "da12fc71f778b5a7",
        "type": "modbus-flex-write",
        "z": "d978b0f7aca97104",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "2c7693233d97e315",
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "4018a4ed84a6160a"
            ],
            []
        ]
    },
    {
        "id": "fbb247eed2844842",
        "type": "function",
        "z": "d978b0f7aca97104",
        "name": "f_write_MB",
        "func": "var obj= msg.req.body;\nvar id=parseInt(obj._id);\nvar threshold = obj.Threshold;\nvar addr;\nif(id==1)\n{\n   addr=2;\n}\nif(id==2)\n{\n   addr=3;\n}\n\nmsg.payload = { value: threshold, 'fc': 6, 'unitid': 1, 'address': addr , 'quantity': 1 }  \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "da12fc71f778b5a7"
            ]
        ]
    },
    {
        "id": "d5066c55a4b204d5",
        "type": "function",
        "z": "d978b0f7aca97104",
        "name": "f_write_MB",
        "func": "var obj= msg.req.body;\nvar id=parseInt(obj._id);\nvar active = obj.IsActive;\nvar addr;\nif(id==1)\n{\n   addr=0;\n}\nif(id==2)\n{\n   addr=1;\n}\n\nmsg.payload = { value: active, 'fc': 6, 'unitid': 1, 'address': addr , 'quantity': 1 }  \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 640,
        "wires": [
            [
                "3794daf25094f29d"
            ]
        ]
    },
    {
        "id": "3794daf25094f29d",
        "type": "modbus-flex-write",
        "z": "d978b0f7aca97104",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "2c7693233d97e315",
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "x": 450,
        "y": 520,
        "wires": [
            [
                "6601778f245ab67f"
            ],
            []
        ]
    },
    {
        "id": "678fc95ed05b03d5",
        "type": "modbus-flex-getter",
        "z": "d978b0f7aca97104",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "2c7693233d97e315",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 250,
        "y": 40,
        "wires": [
            [
                "12e331f4e85726f4",
                "48b1ee8e058458f4",
                "bfc739d2b34c716b",
                "17c98f4934f2cbd3"
            ],
            []
        ]
    },
    {
        "id": "1ab476d45f8efc99",
        "type": "inject",
        "z": "d978b0f7aca97104",
        "name": "Read_dataP12",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "Read",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "bc1e98a8e66739a1"
            ]
        ]
    },
    {
        "id": "bc1e98a8e66739a1",
        "type": "function",
        "z": "d978b0f7aca97104",
        "name": "f_read_data",
        "func": "msg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': 4 , 'quantity': 7 } \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "678fc95ed05b03d5"
            ]
        ]
    },
    {
        "id": "12e331f4e85726f4",
        "type": "function",
        "z": "d978b0f7aca97104",
        "name": "read_MB_json_P1",
        "func": " var data={};\n data.TimeStamp = new Date();\n data.Presure = msg.payload[0];\n data.A = msg.payload[2];\n data.kW = msg.payload[4];\n data.Hz= msg.payload[6];\n msg.collection = \"t_Data_Pump01\";\n msg.payload =data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 40,
        "wires": [
            [
                "55c71a1cd16ff8e9"
            ]
        ]
    },
    {
        "id": "55c71a1cd16ff8e9",
        "type": "mongodb3 in",
        "z": "d978b0f7aca97104",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "Insert_data",
        "collection": "",
        "operation": "insert",
        "x": 830,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "17c98f4934f2cbd3",
        "type": "function",
        "z": "d978b0f7aca97104",
        "name": "read_MB_jsonP2",
        "func": " var data2={};\n data2.TimeStamp = new Date();\n\n data2.Presure = msg.payload[1];\n\n data2.A = msg.payload[3];\n\n data2.kW = msg.payload[5];\n \n msg.payload =JSON.stringify(data2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "26f776f200efde22"
            ]
        ]
    },
    {
        "id": "26f776f200efde22",
        "type": "json",
        "z": "d978b0f7aca97104",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 220,
        "wires": [
            [
                "4ef6f4ae5005f849"
            ]
        ]
    },
    {
        "id": "4ef6f4ae5005f849",
        "type": "mongodb3 in",
        "z": "d978b0f7aca97104",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "Insert_data",
        "collection": "t_Data_Pump02",
        "operation": "insert",
        "x": 830,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "48b1ee8e058458f4",
        "type": "function",
        "z": "d978b0f7aca97104",
        "name": "f_update_configP1",
        "func": "var p1 = msg.payload[0];\nvar a1 = msg.payload[2];\nvar kW1 = msg.payload[4];\nvar hz1= msg.payload[6];\nvar time = new Date();\nvar data =[];\nvar currentMsg = null, outMessage = null;\ncurrentMsg = {\"_id\":1};\ndata.push(currentMsg);\noutMessage= { $set: { \"A\": a1,\"Pressure\" : p1, \"kW\" : kW1,\"Hz\" : hz1,\"TimeStamp\" : time } };\ndata.push(outMessage);\nmsg.payload= data;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 100,
        "wires": [
            [
                "4e238dc5417e5d6f"
            ]
        ]
    },
    {
        "id": "4e238dc5417e5d6f",
        "type": "mongodb3 in",
        "z": "d978b0f7aca97104",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "Update_p12_conffig",
        "collection": "t_PumpControl",
        "operation": "updateOne",
        "x": 860,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bfc739d2b34c716b",
        "type": "function",
        "z": "d978b0f7aca97104",
        "name": "f_update_configP2",
        "func": "p2 = msg.payload[1];\na2 = msg.payload[3];\nkW2 = msg.payload[5];\nvar time = new Date();\nvar data =[];\nvar currentMsg = null, outMessage = null;\ncurrentMsg = {\"_id\":2};\ndata.push(currentMsg);\noutMessage= { $set: { \"A\": a2,\"Pressure\" : p2, \"kW\" : kW2,\"TimeStamp\": time } };\ndata.push(outMessage);\nmsg.payload= data;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 140,
        "wires": [
            [
                "4e238dc5417e5d6f"
            ]
        ]
    },
    {
        "id": "09d0f1a60120155e",
        "type": "inject",
        "z": "1b0c8ad9a67c0c54",
        "name": "Trigger_1m",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "Read",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "7b681d8a39748417"
            ]
        ]
    },
    {
        "id": "7b681d8a39748417",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "Minute_Mod",
        "func": "let Now = global.get(\"Now\")\nlet Config = global.get(\"Config\")\nlet Mod = Config.FTP1.LogTime\n\nlet Minute_Mod = Now.Minute % Mod\n\nif (Minute_Mod === 0) {\n    msg.enableLog = true\n    return msg\n} \n",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 80,
        "wires": [
            [
                "5005c26d3772dd1d"
            ]
        ]
    },
    {
        "id": "fce16b97ede45f89",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "Config_LogFile",
        "func": "let enableLog = msg.enableLog\nlet Config = global.get(\"Config\")\nlet SiteName = Config.FTP1.SiteName\n\nif (enableLog === true) {\n    let pH = global.get(\"pH\").Value\n    let pH_Status = global.get(\"pH\").Status + \"\"\n    let Doduc = global.get(\"Doduc\").Value\n    let Doduc_Status = global.get(\"Doduc\").Status + \"\"\n\n    let Now = global.get(\"Now\")\n    let year = Now.Year + \"\"\n    let month = Now.Month + \"\"\n    let day = Now.Day + \"\"\n    let hour = Now.Hour + \"\"\n    let minute = Now.Minute + \"\"\n    let second = Now.Second + \"\"\n\n    day = checkZero(day);\n    month = checkZero(month)\n    year = checkZero(year)\n    hour = checkZero(hour)\n    minute = checkZero(minute)\n    second = checkZero(second)\n\n    pH_Status = checkZero(pH_Status)\n    Doduc_Status = checkZero(Doduc_Status)\n\n    let logtime = year + month + day +  hour + minute + \"00\"\n    \n    let FTPStr = \"pH\" + \"\\t\" + pH + \"\\t\" + \"-\" + \"\\t\" + logtime + \"\\t\" + pH_Status + \"\\r\\n\" + \"Doduc\" + \"\\t\" + Doduc + \"\\t\" + \"NTU\" + \"\\t\" + logtime + \"\\t\" + Doduc_Status + \"\\r\\n\"\n    \n    msg.filename = \"C:/Users/Administrator/Desktop/Test/FTP1/\" + SiteName + \"_\" + logtime + \".txt\"\n    msg.payload = FTPStr\n    return msg\n}\n\nfunction checkZero(data){\n    if (data.length == 1) data = \"0\" + data\n    return data\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 80,
        "wires": [
            [
                "2841c97f2ec17296"
            ]
        ]
    },
    {
        "id": "69f2b744cc0cd1e4",
        "type": "debug",
        "z": "1b0c8ad9a67c0c54",
        "name": "logFile",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1190,
        "y": 80,
        "wires": []
    },
    {
        "id": "2841c97f2ec17296",
        "type": "file",
        "z": "1b0c8ad9a67c0c54",
        "name": "LogFile",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "69f2b744cc0cd1e4"
            ]
        ]
    },
    {
        "id": "8146fc8fe2c2941c",
        "type": "fs-file-lister",
        "z": "1b0c8ad9a67c0c54",
        "name": "FileLister",
        "start": "",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": false,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 440,
        "y": 300,
        "wires": [
            [
                "a6e7d2e9434e249b"
            ]
        ]
    },
    {
        "id": "02db7d7404f987f5",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "Directory_LogFile",
        "func": "    msg.payload = {\"start\":\"C:/Users/Administrator/Desktop/Test/FTP1\"}\n    return msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "8146fc8fe2c2941c"
            ]
        ]
    },
    {
        "id": "a6e7d2e9434e249b",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "OldestFile",
        "func": "msg.fileName = msg.payload[0]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 300,
        "wires": [
            [
                "c55656d2dcf5bfc9",
                "bf7abb2de569997f"
            ]
        ]
    },
    {
        "id": "909d1b132675086b",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "Config_Directory",
        "func": "let fileName = msg.fileName\nglobal.set(\"finishSend\",false)\n\nlet Config = global.get(\"Config\")\nlet DateDirectoryType = Config.FTP1.DateDirectoryType\nlet Host = Config.FTP1.Host\nlet Port = Config.FTP1.Port\nlet Directory = Config.FTP1.Directory\nlet User = Config.FTP1.User\nlet Pass = Config.FTP1.Pass\n\n\nlet DateDirectory\n\nif (DateDirectoryType == \"YYYYMMDD\") {\n    DateDirectory = fileName.slice(-18,-10)\n    msg.payload = \"curl -u \" + User + \":\" + Pass + \" ftp://\" + Host + \":\" + Port + \"/\" + \" -Q \\\"MKD \" + Directory + \"/\"+ DateDirectory +\"\\\"\";\n}\n    \nif (DateDirectoryType == \"YYYY/MM/DD\") {\n    DateDirectory = fileName.slice(-18,-14) + \"/\" + fileName.slice(-14,-12) + \"/\" + fileName.slice(-12,-10)\n    msg.payload = \"curl -u \" + User + \":\" + Pass + \" ftp://\" + Host + \":\" + Port + \"/\" + \" -Q \\\"MKD \" + Directory + \"/\"+ DateDirectory +\"\\\"\";\n}\n\nmsg.DateDirectory = DateDirectory\nmsg.fileName = fileName\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 480,
        "wires": [
            [
                "57a4b29dcf10cd75"
            ]
        ]
    },
    {
        "id": "57a4b29dcf10cd75",
        "type": "exec",
        "z": "1b0c8ad9a67c0c54",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Create_DateDirectory",
        "x": 560,
        "y": 480,
        "wires": [
            [
                "e094801261b10dbc"
            ],
            [],
            [
                "5524929aa514cce9"
            ]
        ]
    },
    {
        "id": "e094801261b10dbc",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "Config_FileUpload",
        "func": "let fileName = msg.fileName\nlet DateDirectory = msg.DateDirectory\nlet Config = global.get(\"Config\")\nlet Host = Config.FTP1.Host\nlet Port = Config.FTP1.Port\nlet User = Config.FTP1.User\nlet Pass = Config.FTP1.Pass\nlet Directory = Config.FTP1.Directory\n\nmsg.payload =\"curl -T \" + \"C:/Users/Administrator/Desktop/Test/FTP1/\" + fileName + \" ftp://\" + Host + \":\" + Port  + Directory + \"/\" + DateDirectory + \"/\" + \" --user \"+ User + \":\" + Pass\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 480,
        "wires": [
            [
                "4708ec40af71b6eb"
            ]
        ]
    },
    {
        "id": "4708ec40af71b6eb",
        "type": "exec",
        "z": "1b0c8ad9a67c0c54",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Upload_File",
        "x": 1090,
        "y": 480,
        "wires": [
            [],
            [],
            [
                "01b3b3d2da1a2d0d",
                "928719abd54bfc07"
            ]
        ]
    },
    {
        "id": "3eb6d5300d2ec20a",
        "type": "fs-ops-move",
        "z": "1b0c8ad9a67c0c54",
        "name": "MoveFile",
        "sourcePath": "sourcePath",
        "sourcePathType": "msg",
        "sourceFilename": "sourceFilename",
        "sourceFilenameType": "msg",
        "destPath": "destinationPath",
        "destPathType": "msg",
        "destFilename": "destinationFilename",
        "destFilenameType": "msg",
        "link": false,
        "x": 2260,
        "y": 540,
        "wires": [
            [
                "ffbffb884c168206"
            ]
        ]
    },
    {
        "id": "a2189cccfdecb6b2",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "Config_MoveFile",
        "func": "fileName = msg.fileName\nmsg.sourcePath = \"C:/Users/Administrator/Desktop/Test/FTP1/\"\nmsg.sourceFilename = fileName\nmsg.destinationPath = \"C:/Users/Administrator/Desktop/Test/FTP1_Stored/\"\nmsg.destinationFilename = fileName\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2050,
        "y": 540,
        "wires": [
            [
                "3eb6d5300d2ec20a"
            ]
        ]
    },
    {
        "id": "1aba2edc1cadd1c6",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "FinishSend",
        "func": "let connectionCode = msg.payload.code\n\nlet fileName = msg.fileName\nif ((fileName === undefined) || (connectionCode !== 0)) {\n    global.set(\"finishSend\",true)\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 300,
        "wires": [
            [
                "1b54a0f9d6325997"
            ]
        ]
    },
    {
        "id": "6295574f9a8b55bd",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "Check_FTPServer",
        "func": "let Config = global.get(\"Config\")\nlet Host = Config.FTP1.Host\nlet Port = Config.FTP1.Port\nlet User = Config.FTP1.User\nlet Pass = Config.FTP1.Pass\n\nmsg.payload = \"curl -u \" + User + \":\" + Pass + \" ftp://\"+ Host + \":\" + Port\n    \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 300,
        "wires": [
            [
                "3ebd8232e33fc3d4"
            ]
        ]
    },
    {
        "id": "3ebd8232e33fc3d4",
        "type": "exec",
        "z": "1b0c8ad9a67c0c54",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "connectFTP",
        "x": 2090,
        "y": 300,
        "wires": [
            [],
            [],
            [
                "610fee22f88e885c",
                "3b4f8ffb95bce27f"
            ]
        ]
    },
    {
        "id": "bd394bcd04fa7c4e",
        "type": "inject",
        "z": "1b0c8ad9a67c0c54",
        "name": "Initializer",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1260,
        "y": 220,
        "wires": [
            [
                "538e5b610c2109ed"
            ]
        ]
    },
    {
        "id": "c55656d2dcf5bfc9",
        "type": "switch",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "property": "fileName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            },
            {
                "t": "neq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 300,
        "wires": [
            [
                "1aba2edc1cadd1c6"
            ],
            [
                "909d1b132675086b"
            ]
        ]
    },
    {
        "id": "be0d74f9bec10505",
        "type": "link in",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "links": [
            "ffbffb884c168206"
        ],
        "x": 75,
        "y": 380,
        "wires": [
            [
                "02db7d7404f987f5"
            ]
        ]
    },
    {
        "id": "ffbffb884c168206",
        "type": "link out",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "links": [
            "be0d74f9bec10505"
        ],
        "x": 2435,
        "y": 480,
        "wires": []
    },
    {
        "id": "610fee22f88e885c",
        "type": "switch",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 320,
        "wires": [
            [
                "ffbffb884c168206"
            ],
            [
                "054f38d307da39dd"
            ]
        ]
    },
    {
        "id": "da64fbe538d25240",
        "type": "link in",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "links": [
            "054f38d307da39dd"
        ],
        "x": 915,
        "y": 380,
        "wires": [
            [
                "1aba2edc1cadd1c6"
            ]
        ]
    },
    {
        "id": "054f38d307da39dd",
        "type": "link out",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "links": [
            "da64fbe538d25240"
        ],
        "x": 2315,
        "y": 380,
        "wires": []
    },
    {
        "id": "1b54a0f9d6325997",
        "type": "delay",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1260,
        "y": 300,
        "wires": [
            [
                "538e5b610c2109ed"
            ]
        ]
    },
    {
        "id": "bf7abb2de569997f",
        "type": "debug",
        "z": "1b0c8ad9a67c0c54",
        "name": "oldestFile",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "fileName",
        "targetType": "msg",
        "x": 760,
        "y": 220,
        "wires": []
    },
    {
        "id": "5524929aa514cce9",
        "type": "debug",
        "z": "1b0c8ad9a67c0c54",
        "name": "createDateDirectory",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 840,
        "y": 560,
        "wires": []
    },
    {
        "id": "01b3b3d2da1a2d0d",
        "type": "debug",
        "z": "1b0c8ad9a67c0c54",
        "name": "upload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1310,
        "y": 620,
        "wires": []
    },
    {
        "id": "3b4f8ffb95bce27f",
        "type": "debug",
        "z": "1b0c8ad9a67c0c54",
        "name": "connectFTP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 2290,
        "y": 220,
        "wires": []
    },
    {
        "id": "9cf623bf514bdb67",
        "type": "switch",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1650,
        "y": 320,
        "wires": [
            [
                "6295574f9a8b55bd"
            ],
            [
                "054f38d307da39dd"
            ]
        ]
    },
    {
        "id": "538e5b610c2109ed",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "Get_enableFTP",
        "func": "let Config = global.get(\"Config\")\nlet enableFTP = Config.FTP1.Enable\n\nif (enableFTP) {\n    msg.payload = true\n} else {\n    msg.payload = false\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1460,
        "y": 300,
        "wires": [
            [
                "9cf623bf514bdb67"
            ]
        ]
    },
    {
        "id": "618e95f5c18901c2",
        "type": "json",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 970,
        "y": 660,
        "wires": [
            [
                "dc3a55562e2aa806"
            ]
        ]
    },
    {
        "id": "dc3a55562e2aa806",
        "type": "file",
        "z": "3f89b77d17bdbc04",
        "name": "Write Config.txt",
        "filename": "C:/Users/Administrator/Desktop/Test/Config.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1300,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "36cba7f7f9445a4b",
        "type": "inject",
        "z": "3f89b77d17bdbc04",
        "name": "Read Config.txt",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "280722bee5bedace"
            ]
        ]
    },
    {
        "id": "280722bee5bedace",
        "type": "file in",
        "z": "3f89b77d17bdbc04",
        "name": "Read Config.txt",
        "filename": "C:/Users/Administrator/Desktop/Test/Config.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "64c435ade76f8b18"
            ]
        ]
    },
    {
        "id": "64c435ade76f8b18",
        "type": "json",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "ecaafac13fe3119f",
                "117ce483ba42e2ab"
            ]
        ]
    },
    {
        "id": "ecaafac13fe3119f",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Load to Config",
        "func": "global.set(\"Config\",msg.payload)\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a42054cec1e67e58",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Write Config.FTP1",
        "func": "let TempConfig = global.get(\"TempConfig\")\nlet Config = global.get(\"Config\")\n\nConfig.FTP1.Enable = TempConfig.FTP1.Enable\nConfig.FTP1.LogTime = TempConfig.FTP1.LogTime\nConfig.FTP1.Host = TempConfig.FTP1.Host\nConfig.FTP1.Port = TempConfig.FTP1.Port\nConfig.FTP1.User = TempConfig.FTP1.User\nConfig.FTP1.Pass = TempConfig.FTP1.Pass\nConfig.FTP1.Directory = TempConfig.FTP1.Directory\nConfig.FTP1.SiteName = TempConfig.FTP1.SiteName\nConfig.FTP1.DateDirectoryType = TempConfig.FTP1.DateDirectoryType\n\nglobal.set(\"Config\",Config)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 660,
        "wires": [
            [
                "4428da0277557032"
            ]
        ]
    },
    {
        "id": "9cd5578d53ed8d1f",
        "type": "inject",
        "z": "3f89b77d17bdbc04",
        "name": "Check Config.txt",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "c2c0eb23f3a312a1"
            ]
        ]
    },
    {
        "id": "c2c0eb23f3a312a1",
        "type": "fs-file-lister",
        "z": "3f89b77d17bdbc04",
        "name": "Config.txt",
        "start": "C:/Users/Administrator/Desktop/Test",
        "pattern": "*Config.txt*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": false,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 360,
        "y": 80,
        "wires": [
            [
                "96abf73ee5b3f35b"
            ]
        ]
    },
    {
        "id": "96abf73ee5b3f35b",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Config.txt",
        "func": "msg.fileName = msg.payload[0]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 80,
        "wires": [
            [
                "d30f298ad7ef2525"
            ]
        ]
    },
    {
        "id": "d30f298ad7ef2525",
        "type": "switch",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "property": "fileName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            },
            {
                "t": "neq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 80,
        "wires": [
            [
                "9e16e7792169b42a"
            ],
            []
        ]
    },
    {
        "id": "9e16e7792169b42a",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Content",
        "func": "let Config = {\n    FTP1 : {\n        \"Enable\": false,\n        \"Host\": \"127.0.0.1\",\n        \"Port\": \"21\",\n        \"User\": \"admin\",\n        \"Pass\": \"admin\",\n        \"Directory\": \"/tudong/LA\",\n        \"SiteName\": \"LA_CNLA_NM02\",\n        \"LogTime\": 5,\n        \"DateDirectoryType\": \"YYYYMMDD\"\n    },\n    FTP2 : {\n        \"Enable\": false,\n        \"Host\": \"127.0.0.1\",\n        \"Port\": \"21\",\n        \"User\": \"admin\",\n        \"Pass\": \"admin\",\n        \"Directory\": \"/tudong/LA\",\n        \"SiteName\": \"LA_CNLA_NM02\",\n        \"LogTime\": 5,\n        \"DateDirectoryType\": \"YYYYMMDD\"\n    }\n} \n\nmsg.payload = Config\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 80,
        "wires": [
            [
                "89d79578ea9a9e2c"
            ]
        ]
    },
    {
        "id": "89d79578ea9a9e2c",
        "type": "json",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 970,
        "y": 80,
        "wires": [
            [
                "32733fc9c89abab7"
            ]
        ]
    },
    {
        "id": "32733fc9c89abab7",
        "type": "file",
        "z": "3f89b77d17bdbc04",
        "name": "Create_Config.txt",
        "filename": "C:/Users/Administrator/Desktop/Test/Config.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1310,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "676c57cb67b4757a",
        "type": "ui_switch",
        "z": "3f89b77d17bdbc04",
        "name": "Enable",
        "label": "Enable",
        "tooltip": "",
        "group": "ccd36c9f1c19661f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1020,
        "y": 280,
        "wires": [
            [
                "9e6ce086996a0294"
            ]
        ]
    },
    {
        "id": "100d81f4f9ddc9a9",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP1.Enable\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 280,
        "wires": [
            [
                "676c57cb67b4757a"
            ]
        ]
    },
    {
        "id": "9e6ce086996a0294",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP1.Enable = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "855eee25be9c2895",
        "type": "ui_dropdown",
        "z": "3f89b77d17bdbc04",
        "name": "LogTime",
        "label": "LogTime",
        "tooltip": "",
        "place": "Select option",
        "group": "ccd36c9f1c19661f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": "1",
                "type": "str"
            },
            {
                "label": "5",
                "value": "5",
                "type": "str"
            },
            {
                "label": "10",
                "value": "10",
                "type": "str"
            },
            {
                "label": "15",
                "value": "15",
                "type": "str"
            },
            {
                "label": "30",
                "value": "30",
                "type": "str"
            },
            {
                "label": "60",
                "value": "60",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1020,
        "y": 320,
        "wires": [
            [
                "15f88b2dc012ddcf"
            ]
        ]
    },
    {
        "id": "15f88b2dc012ddcf",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP1.LogTime = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b66e359913bbf09e",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP1.LogTime\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 320,
        "wires": [
            [
                "855eee25be9c2895"
            ]
        ]
    },
    {
        "id": "6db62e7317b9213d",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "Host",
        "label": "Host",
        "tooltip": "",
        "group": "ccd36c9f1c19661f",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 360,
        "wires": [
            [
                "734def11f0092da2"
            ]
        ]
    },
    {
        "id": "ed18a49d4d120827",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP1.Host\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 360,
        "wires": [
            [
                "6db62e7317b9213d"
            ]
        ]
    },
    {
        "id": "734def11f0092da2",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP1.Host = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d1194c275d59dd82",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "Port",
        "label": "Port",
        "tooltip": "",
        "group": "ccd36c9f1c19661f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "24929b90f5b9c22f"
            ]
        ]
    },
    {
        "id": "55ffebc58efdd802",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP1.Port\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 400,
        "wires": [
            [
                "d1194c275d59dd82"
            ]
        ]
    },
    {
        "id": "24929b90f5b9c22f",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP1.Port = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "388389159b93e068",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "User",
        "label": "User",
        "tooltip": "",
        "group": "ccd36c9f1c19661f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "15638d32effac338"
            ]
        ]
    },
    {
        "id": "39785d8703de80ea",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP1.User\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 440,
        "wires": [
            [
                "388389159b93e068"
            ]
        ]
    },
    {
        "id": "15638d32effac338",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP1.User = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "87d3fb16ca8fb3d5",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "Pass",
        "label": "Pass",
        "tooltip": "",
        "group": "ccd36c9f1c19661f",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 480,
        "wires": [
            [
                "a087b9475bbcf902"
            ]
        ]
    },
    {
        "id": "5817517648bda2b6",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP1.Pass\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 480,
        "wires": [
            [
                "87d3fb16ca8fb3d5"
            ]
        ]
    },
    {
        "id": "a087b9475bbcf902",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP1.Pass = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "09d5aba78af8f5f0",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "Directory",
        "label": "Directory",
        "tooltip": "",
        "group": "ccd36c9f1c19661f",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1020,
        "y": 520,
        "wires": [
            [
                "2f2a144a2a38e732"
            ]
        ]
    },
    {
        "id": "2e6c3158750c63eb",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP1.Directory\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 520,
        "wires": [
            [
                "09d5aba78af8f5f0"
            ]
        ]
    },
    {
        "id": "2f2a144a2a38e732",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP1.Directory = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4859bf91814fa8ea",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "SiteName",
        "label": "SiteName",
        "tooltip": "",
        "group": "ccd36c9f1c19661f",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1020,
        "y": 560,
        "wires": [
            [
                "fd8766f1c57a7c11"
            ]
        ]
    },
    {
        "id": "6a7467eb20a8d2c6",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP1.SiteName\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 560,
        "wires": [
            [
                "4859bf91814fa8ea"
            ]
        ]
    },
    {
        "id": "fd8766f1c57a7c11",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP1.SiteName = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "405813675f3d28c0",
        "type": "ui_dropdown",
        "z": "3f89b77d17bdbc04",
        "name": "DateDirectoryType",
        "label": "DateDirectoryType",
        "tooltip": "",
        "place": "Select option",
        "group": "ccd36c9f1c19661f",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "YYYYMMDD",
                "value": "YYYYMMDD",
                "type": "str"
            },
            {
                "label": "YYYY/MM/DD",
                "value": "YYYY/MM/DD",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "a94ba206de262e2d"
            ]
        ]
    },
    {
        "id": "a94ba206de262e2d",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP1.DateDirectoryType = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "90086e53e6e27d0b",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP1.DateDirectoryType\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 600,
        "wires": [
            [
                "405813675f3d28c0"
            ]
        ]
    },
    {
        "id": "4428da0277557032",
        "type": "delay",
        "z": "3f89b77d17bdbc04",
        "name": "delay 1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 600,
        "y": 660,
        "wires": [
            [
                "a19d2e3c2dfa9a9c"
            ]
        ]
    },
    {
        "id": "a19d2e3c2dfa9a9c",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Content Config.txt",
        "func": "msg.payload = global.get(\"Config\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 660,
        "wires": [
            [
                "618e95f5c18901c2"
            ]
        ]
    },
    {
        "id": "7c78fa3f65b020f7",
        "type": "ui_button",
        "z": "3f89b77d17bdbc04",
        "name": "Update_Config.FTP1",
        "group": "ccd36c9f1c19661f",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 660,
        "wires": [
            [
                "a42054cec1e67e58"
            ]
        ]
    },
    {
        "id": "48de8124e410a625",
        "type": "encrypt",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "key": "Rabbit",
        "x": 1120,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7827911f25b2b228",
        "type": "decrypt",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "key": "Rabbit",
        "x": 540,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "11b627c9fe0f8e6e",
        "type": "encrypt",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "key": "Rabbit",
        "x": 1120,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "240f6349b3270078",
        "type": "ui_button",
        "z": "3f89b77d17bdbc04",
        "name": "Load_Config.FTP1",
        "group": "ccd36c9f1c19661f",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Load",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "0ae3dcc11872db1b"
            ]
        ]
    },
    {
        "id": "0ae3dcc11872db1b",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Load to Config",
        "func": "msg.payload = global.get(\"Config\",msg.payload)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 360,
        "wires": [
            [
                "100d81f4f9ddc9a9",
                "ed18a49d4d120827",
                "55ffebc58efdd802",
                "39785d8703de80ea",
                "5817517648bda2b6",
                "2e6c3158750c63eb",
                "6a7467eb20a8d2c6",
                "b66e359913bbf09e",
                "90086e53e6e27d0b"
            ]
        ]
    },
    {
        "id": "5005c26d3772dd1d",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "Get_enableFTP1",
        "func": "let Config = global.get(\"Config\")\nlet enableFTP = Config.FTP1.Enable\n\nif (enableFTP) {\n    msg.payload = true\n} else {\n    msg.payload = false\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 80,
        "wires": [
            [
                "42502d9544c60e56"
            ]
        ]
    },
    {
        "id": "42502d9544c60e56",
        "type": "switch",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 80,
        "wires": [
            [
                "fce16b97ede45f89"
            ],
            []
        ]
    },
    {
        "id": "6bb78df209025e18",
        "type": "inject",
        "z": "cba66dcd1fa1961e",
        "name": "Trigger_1m",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "Read",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "6b8008ecc6b5ca92"
            ]
        ]
    },
    {
        "id": "6b8008ecc6b5ca92",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "Minute_Mod",
        "func": "let Now = global.get(\"Now\")\nlet Config = global.get(\"Config\")\nlet Mod = Config.FTP2.LogTime\n\nlet Minute_Mod = Now.Minute % Mod\n\nif (Minute_Mod === 0) {\n    msg.enableLog = true\n    return msg\n} \n",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 80,
        "wires": [
            [
                "bf01639dcbab2821"
            ]
        ]
    },
    {
        "id": "7ab6074940577e03",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "Config_LogFile",
        "func": "let enableLog = msg.enableLog\nlet Config = global.get(\"Config\")\nlet SiteName = Config.FTP2.SiteName\n\nif (enableLog === true) {\n    let pH = global.get(\"pH\").Value\n    let pH_Status = global.get(\"pH\").Status + \"\"\n    let Doduc = global.get(\"Doduc\").Value\n    let Doduc_Status = global.get(\"Doduc\").Status + \"\"\n\n    let Now = global.get(\"Now\")\n    let year = Now.Year + \"\"\n    let month = Now.Month + \"\"\n    let day = Now.Day + \"\"\n    let hour = Now.Hour + \"\"\n    let minute = Now.Minute + \"\"\n    let second = Now.Second + \"\"\n\n    day = checkZero(day);\n    month = checkZero(month)\n    year = checkZero(year)\n    hour = checkZero(hour)\n    minute = checkZero(minute)\n    second = checkZero(second)\n\n    pH_Status = checkZero(pH_Status)\n    Doduc_Status = checkZero(Doduc_Status)\n\n    let logtime = year + month + day +  hour + minute + \"00\"\n    \n    let FTPStr = \"pH\" + \"\\t\" + pH + \"\\t\" + \"-\" + \"\\t\" + logtime + \"\\t\" + pH_Status + \"\\r\\n\" + \"Doduc\" + \"\\t\" + Doduc + \"\\t\" + \"NTU\" + \"\\t\" + logtime + \"\\t\" + Doduc_Status + \"\\r\\n\"\n    \n    msg.filename = \"C:/Users/Administrator/Desktop/Test/FTP2/\" + SiteName + \"_\" + logtime + \".txt\"\n    msg.payload = FTPStr\n    return msg\n}\n\nfunction checkZero(data){\n    if (data.length == 1) data = \"0\" + data\n    return data\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 80,
        "wires": [
            [
                "b7f9a3f216e72937"
            ]
        ]
    },
    {
        "id": "7baa06bc613ca25a",
        "type": "debug",
        "z": "cba66dcd1fa1961e",
        "name": "logFile",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1190,
        "y": 80,
        "wires": []
    },
    {
        "id": "b7f9a3f216e72937",
        "type": "file",
        "z": "cba66dcd1fa1961e",
        "name": "LogFile",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "7baa06bc613ca25a"
            ]
        ]
    },
    {
        "id": "3966090c43538fe5",
        "type": "fs-file-lister",
        "z": "cba66dcd1fa1961e",
        "name": "FileLister",
        "start": "",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": false,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 440,
        "y": 300,
        "wires": [
            [
                "a018170349345913"
            ]
        ]
    },
    {
        "id": "1468c3a30a855ccf",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "Directory_LogFile",
        "func": "    msg.payload = {\"start\":\"C:/Users/Administrator/Desktop/Test/FTP2\"}\n    return msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "3966090c43538fe5"
            ]
        ]
    },
    {
        "id": "a018170349345913",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "OldestFile",
        "func": "msg.fileName = msg.payload[0]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 300,
        "wires": [
            [
                "61d3ac445a3426a2",
                "76ffd86a319250e3"
            ]
        ]
    },
    {
        "id": "a1d095f53a34957d",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "Config_Directory",
        "func": "let fileName = msg.fileName\nglobal.set(\"finishSend\",false)\n\nlet Config = global.get(\"Config\")\nlet DateDirectoryType = Config.FTP2.DateDirectoryType\nlet Host = Config.FTP2.Host\nlet Port = Config.FTP2.Port\nlet Directory = Config.FTP2.Directory\nlet User = Config.FTP2.User\nlet Pass = Config.FTP2.Pass\n\n\nlet DateDirectory\n\nif (DateDirectoryType == \"YYYYMMDD\") {\n    DateDirectory = fileName.slice(-18,-10)\n    msg.payload = \"curl -u \" + User + \":\" + Pass + \" ftp://\" + Host + \":\" + Port + \"/\" + \" -Q \\\"MKD \" + Directory + \"/\"+ DateDirectory +\"\\\"\";\n}\n    \nif (DateDirectoryType == \"YYYY/MM/DD\") {\n    DateDirectory = fileName.slice(-18,-14) + \"/\" + fileName.slice(-14,-12) + \"/\" + fileName.slice(-12,-10)\n    msg.payload = \"curl -u \" + User + \":\" + Pass + \" ftp://\" + Host + \":\" + Port + \"/\" + \" -Q \\\"MKD \" + Directory + \"/\"+ DateDirectory +\"\\\"\";\n}\n\nmsg.DateDirectory = DateDirectory\nmsg.fileName = fileName\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 480,
        "wires": [
            [
                "168d127784408995"
            ]
        ]
    },
    {
        "id": "168d127784408995",
        "type": "exec",
        "z": "cba66dcd1fa1961e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Create_DateDirectory",
        "x": 560,
        "y": 480,
        "wires": [
            [
                "c457fd1af9e7bab2"
            ],
            [],
            [
                "7f952c25c4f9598b"
            ]
        ]
    },
    {
        "id": "c457fd1af9e7bab2",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "Config_FileUpload",
        "func": "let fileName = msg.fileName\nlet DateDirectory = msg.DateDirectory\nlet Config = global.get(\"Config\")\nlet Host = Config.FTP2.Host\nlet Port = Config.FTP2.Port\nlet User = Config.FTP2.User\nlet Pass = Config.FTP2.Pass\nlet Directory = Config.FTP2.Directory\n\nmsg.payload =\"curl -T \" + \"C:/Users/Administrator/Desktop/Test/FTP2/\" + fileName + \" ftp://\" + Host + \":\" + Port  + Directory + \"/\" + DateDirectory + \"/\" + \" --user \"+ User + \":\" + Pass\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 480,
        "wires": [
            [
                "a105361731460073"
            ]
        ]
    },
    {
        "id": "a105361731460073",
        "type": "exec",
        "z": "cba66dcd1fa1961e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Upload_File",
        "x": 1090,
        "y": 480,
        "wires": [
            [],
            [],
            [
                "b545fc9a48a082d9",
                "6d72165c289aafb4"
            ]
        ]
    },
    {
        "id": "fc499dc1c8695d46",
        "type": "fs-ops-move",
        "z": "cba66dcd1fa1961e",
        "name": "MoveFile",
        "sourcePath": "sourcePath",
        "sourcePathType": "msg",
        "sourceFilename": "sourceFilename",
        "sourceFilenameType": "msg",
        "destPath": "destinationPath",
        "destPathType": "msg",
        "destFilename": "destinationFilename",
        "destFilenameType": "msg",
        "link": false,
        "x": 2260,
        "y": 540,
        "wires": [
            [
                "b70d6b0d3f713fa4"
            ]
        ]
    },
    {
        "id": "8c36e0a5919d9406",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "Config_MoveFile",
        "func": "fileName = msg.fileName\nmsg.sourcePath = \"C:/Users/Administrator/Desktop/Test/FTP2/\"\nmsg.sourceFilename = fileName\nmsg.destinationPath = \"C:/Users/Administrator/Desktop/Test/FTP2_Stored/\"\nmsg.destinationFilename = fileName\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2050,
        "y": 540,
        "wires": [
            [
                "fc499dc1c8695d46"
            ]
        ]
    },
    {
        "id": "b0abb5bf9abf2abb",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "FinishSend",
        "func": "let connectionCode = msg.payload.code\n\nlet fileName = msg.fileName\nif ((fileName === undefined) || (connectionCode !== 0)) {\n    global.set(\"finishSend\",true)\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 300,
        "wires": [
            [
                "042c53f2d6695c21"
            ]
        ]
    },
    {
        "id": "8e128e8db04ab49c",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "Check_FTPServer",
        "func": "let Config = global.get(\"Config\")\nlet Host = Config.FTP2.Host\nlet Port = Config.FTP2.Port\nlet User = Config.FTP2.User\nlet Pass = Config.FTP2.Pass\n\nmsg.payload = \"curl -u \" + User + \":\" + Pass + \" ftp://\"+ Host + \":\" + Port\n    \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 300,
        "wires": [
            [
                "20adac6dea32d978"
            ]
        ]
    },
    {
        "id": "20adac6dea32d978",
        "type": "exec",
        "z": "cba66dcd1fa1961e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "connectFTP",
        "x": 2090,
        "y": 300,
        "wires": [
            [],
            [],
            [
                "20fb641aead77c2a",
                "8f564a596b1dbaf7"
            ]
        ]
    },
    {
        "id": "881fb57e231aac99",
        "type": "inject",
        "z": "cba66dcd1fa1961e",
        "name": "Initializer",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1260,
        "y": 220,
        "wires": [
            [
                "93d806396f266ab3"
            ]
        ]
    },
    {
        "id": "61d3ac445a3426a2",
        "type": "switch",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "property": "fileName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            },
            {
                "t": "neq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 300,
        "wires": [
            [
                "b0abb5bf9abf2abb"
            ],
            [
                "a1d095f53a34957d"
            ]
        ]
    },
    {
        "id": "f58a6665872772d9",
        "type": "link in",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "links": [
            "b70d6b0d3f713fa4"
        ],
        "x": 75,
        "y": 380,
        "wires": [
            [
                "1468c3a30a855ccf"
            ]
        ]
    },
    {
        "id": "b70d6b0d3f713fa4",
        "type": "link out",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "links": [
            "f58a6665872772d9"
        ],
        "x": 2435,
        "y": 480,
        "wires": []
    },
    {
        "id": "20fb641aead77c2a",
        "type": "switch",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "31b63cdc6de1db09",
        "type": "link in",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "links": [
            "5c24548ab0f28001"
        ],
        "x": 915,
        "y": 380,
        "wires": [
            [
                "b0abb5bf9abf2abb"
            ]
        ]
    },
    {
        "id": "5c24548ab0f28001",
        "type": "link out",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "links": [
            "31b63cdc6de1db09"
        ],
        "x": 2315,
        "y": 380,
        "wires": []
    },
    {
        "id": "042c53f2d6695c21",
        "type": "delay",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1260,
        "y": 300,
        "wires": [
            [
                "93d806396f266ab3"
            ]
        ]
    },
    {
        "id": "76ffd86a319250e3",
        "type": "debug",
        "z": "cba66dcd1fa1961e",
        "name": "oldestFile",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "fileName",
        "targetType": "msg",
        "x": 760,
        "y": 220,
        "wires": []
    },
    {
        "id": "7f952c25c4f9598b",
        "type": "debug",
        "z": "cba66dcd1fa1961e",
        "name": "createDateDirectory",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 840,
        "y": 560,
        "wires": []
    },
    {
        "id": "b545fc9a48a082d9",
        "type": "debug",
        "z": "cba66dcd1fa1961e",
        "name": "upload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1310,
        "y": 620,
        "wires": []
    },
    {
        "id": "8f564a596b1dbaf7",
        "type": "debug",
        "z": "cba66dcd1fa1961e",
        "name": "connectFTP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 2290,
        "y": 220,
        "wires": []
    },
    {
        "id": "b36bf3bf972abd0d",
        "type": "switch",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1650,
        "y": 320,
        "wires": [
            [
                "b70d6b0d3f713fa4"
            ],
            [
                "5c24548ab0f28001"
            ]
        ]
    },
    {
        "id": "93d806396f266ab3",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "Get_enableFTP",
        "func": "let Config = global.get(\"Config\")\nlet enableFTP = Config.FTP2.Enable\n\nif (enableFTP) {\n    msg.payload = true\n} else {\n    msg.payload = false\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1460,
        "y": 300,
        "wires": [
            [
                "b36bf3bf972abd0d"
            ]
        ]
    },
    {
        "id": "bf01639dcbab2821",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "Get_enableFTP2",
        "func": "let Config = global.get(\"Config\")\nlet enableFTP = Config.FTP2.Enable\n\nif (enableFTP) {\n    msg.payload = true\n} else {\n    msg.payload = false\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 80,
        "wires": [
            [
                "4652a152ce14483d"
            ]
        ]
    },
    {
        "id": "4652a152ce14483d",
        "type": "switch",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 80,
        "wires": [
            [
                "7ab6074940577e03"
            ],
            []
        ]
    },
    {
        "id": "d9120f3a7676d3fd",
        "type": "inject",
        "z": "3855446b400f94de",
        "name": "Trigger_1s",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "Read",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "cf53c278e104d6ba"
            ]
        ]
    },
    {
        "id": "cf53c278e104d6ba",
        "type": "function",
        "z": "3855446b400f94de",
        "name": "Now",
        "func": "let Now = {}\nNow.Year = new Date().getFullYear()\nNow.Month = new Date().getMonth() + 1\nNow.Day = new Date().getDate()\nNow.Hour = new Date().getHours()\nNow.Minute = new Date().getMinutes()\nNow.Second = new Date().getSeconds()\n\nglobal.set(\"Now\",Now)\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a571f7e8a670078c",
        "type": "json",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 970,
        "y": 1180,
        "wires": [
            [
                "17a92597b61945f4"
            ]
        ]
    },
    {
        "id": "17a92597b61945f4",
        "type": "file",
        "z": "3f89b77d17bdbc04",
        "name": "Write Config.txt",
        "filename": "C:/Users/Administrator/Desktop/Test/Config.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1300,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "5bf29c55af11eb30",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Write Config.FTP2",
        "func": "let TempConfig = global.get(\"TempConfig\")\nlet Config = global.get(\"Config\")\n\nConfig.FTP2.Enable = TempConfig.FTP2.Enable\nConfig.FTP2.LogTime = TempConfig.FTP2.LogTime\nConfig.FTP2.Host = TempConfig.FTP2.Host\nConfig.FTP2.Port = TempConfig.FTP2.Port\nConfig.FTP2.User = TempConfig.FTP2.User\nConfig.FTP2.Pass = TempConfig.FTP2.Pass\nConfig.FTP2.Directory = TempConfig.FTP2.Directory\nConfig.FTP2.SiteName = TempConfig.FTP2.SiteName\nConfig.FTP2.DateDirectoryType = TempConfig.FTP2.DateDirectoryType\n\nglobal.set(\"Config\",Config)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1180,
        "wires": [
            [
                "7c64c7a8a921b056"
            ]
        ]
    },
    {
        "id": "35b6f1ee2d5814ba",
        "type": "ui_switch",
        "z": "3f89b77d17bdbc04",
        "name": "Enable",
        "label": "Enable",
        "tooltip": "",
        "group": "7c613b90f28b3b65",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1020,
        "y": 800,
        "wires": [
            [
                "7ca437a8e3e55c0d"
            ]
        ]
    },
    {
        "id": "63e5a24b3f1fb036",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP2.Enable\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 800,
        "wires": [
            [
                "35b6f1ee2d5814ba"
            ]
        ]
    },
    {
        "id": "7ca437a8e3e55c0d",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP2.Enable = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "f0b1ae678e4c72ab",
        "type": "ui_dropdown",
        "z": "3f89b77d17bdbc04",
        "name": "LogTime",
        "label": "LogTime",
        "tooltip": "",
        "place": "Select option",
        "group": "7c613b90f28b3b65",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": "1",
                "type": "str"
            },
            {
                "label": "5",
                "value": "5",
                "type": "str"
            },
            {
                "label": "10",
                "value": "10",
                "type": "str"
            },
            {
                "label": "15",
                "value": "15",
                "type": "str"
            },
            {
                "label": "30",
                "value": "30",
                "type": "str"
            },
            {
                "label": "60",
                "value": "60",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1020,
        "y": 840,
        "wires": [
            [
                "adb532ba93baec4f"
            ]
        ]
    },
    {
        "id": "adb532ba93baec4f",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP2.LogTime = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "bd92cbbb58a08ebc",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP2.LogTime\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 840,
        "wires": [
            [
                "f0b1ae678e4c72ab"
            ]
        ]
    },
    {
        "id": "55bd6bd182a83f2b",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "Host",
        "label": "Host",
        "tooltip": "",
        "group": "7c613b90f28b3b65",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 880,
        "wires": [
            [
                "de52932f91ab44d9"
            ]
        ]
    },
    {
        "id": "2caea71db5338a99",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP2.Host\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 880,
        "wires": [
            [
                "55bd6bd182a83f2b"
            ]
        ]
    },
    {
        "id": "de52932f91ab44d9",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP2.Host = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "aa3edc7e6a7f429b",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "Port",
        "label": "Port",
        "tooltip": "",
        "group": "7c613b90f28b3b65",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 920,
        "wires": [
            [
                "1a4c3150d3c1e351"
            ]
        ]
    },
    {
        "id": "d82160fb2a35c924",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP2.Port\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "aa3edc7e6a7f429b"
            ]
        ]
    },
    {
        "id": "1a4c3150d3c1e351",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP2.Port = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "5daa90630728ce32",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "User",
        "label": "User",
        "tooltip": "",
        "group": "7c613b90f28b3b65",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 960,
        "wires": [
            [
                "2e786a3734c097d9"
            ]
        ]
    },
    {
        "id": "60d34541c8eb95cf",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP2.User\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 960,
        "wires": [
            [
                "5daa90630728ce32"
            ]
        ]
    },
    {
        "id": "2e786a3734c097d9",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP2.User = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "62303fcc4a5ce413",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "Pass",
        "label": "Pass",
        "tooltip": "",
        "group": "7c613b90f28b3b65",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 1000,
        "wires": [
            [
                "def45410b07fc360"
            ]
        ]
    },
    {
        "id": "a6a60492484d4ec1",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP2.Pass\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 1000,
        "wires": [
            [
                "62303fcc4a5ce413"
            ]
        ]
    },
    {
        "id": "def45410b07fc360",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP2.Pass = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "30fa7dd97a7b3b0c",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "Directory",
        "label": "Directory",
        "tooltip": "",
        "group": "7c613b90f28b3b65",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1020,
        "y": 1040,
        "wires": [
            [
                "a53f9cf58aa53401"
            ]
        ]
    },
    {
        "id": "eaa025f9292b7f72",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP2.Directory\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 1040,
        "wires": [
            [
                "30fa7dd97a7b3b0c"
            ]
        ]
    },
    {
        "id": "a53f9cf58aa53401",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP2.Directory = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "76a13cf41cb1def6",
        "type": "ui_text_input",
        "z": "3f89b77d17bdbc04",
        "name": "SiteName",
        "label": "SiteName",
        "tooltip": "",
        "group": "7c613b90f28b3b65",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1020,
        "y": 1080,
        "wires": [
            [
                "9308cfdb903f8540"
            ]
        ]
    },
    {
        "id": "7539fc7536640726",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP2.SiteName\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 1080,
        "wires": [
            [
                "76a13cf41cb1def6"
            ]
        ]
    },
    {
        "id": "9308cfdb903f8540",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP2.SiteName = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "fb6f3b3c4f58a4e7",
        "type": "ui_dropdown",
        "z": "3f89b77d17bdbc04",
        "name": "DateDirectoryType",
        "label": "DateDirectoryType",
        "tooltip": "",
        "place": "Select option",
        "group": "7c613b90f28b3b65",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "YYYYMMDD",
                "value": "YYYYMMDD",
                "type": "str"
            },
            {
                "label": "YYYY/MM/DD",
                "value": "YYYY/MM/DD",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1050,
        "y": 1120,
        "wires": [
            [
                "a1f412934b61ac38"
            ]
        ]
    },
    {
        "id": "a1f412934b61ac38",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "let TempConfig = global.get(\"TempConfig\")\nTempConfig.FTP2.DateDirectoryType = msg.payload\nglobal.set(\"TempConfig\",TempConfig)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "7645c4224d3b4463",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "func": "msg.payload = msg.payload.FTP2.DateDirectoryType\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 1120,
        "wires": [
            [
                "fb6f3b3c4f58a4e7"
            ]
        ]
    },
    {
        "id": "7c64c7a8a921b056",
        "type": "delay",
        "z": "3f89b77d17bdbc04",
        "name": "delay 1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 600,
        "y": 1180,
        "wires": [
            [
                "ccdfc9ef32dcd3ff"
            ]
        ]
    },
    {
        "id": "ccdfc9ef32dcd3ff",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Content Config.txt",
        "func": "msg.payload = global.get(\"Config\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 1180,
        "wires": [
            [
                "a571f7e8a670078c"
            ]
        ]
    },
    {
        "id": "c46bb90a7f3dded8",
        "type": "ui_button",
        "z": "3f89b77d17bdbc04",
        "name": "Update_Config.FTP2",
        "group": "7c613b90f28b3b65",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1180,
        "wires": [
            [
                "5bf29c55af11eb30"
            ]
        ]
    },
    {
        "id": "9e49b083c3a65584",
        "type": "encrypt",
        "z": "3f89b77d17bdbc04",
        "name": "",
        "key": "Rabbit",
        "x": 1120,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "9a22b263bac20e78",
        "type": "ui_button",
        "z": "3f89b77d17bdbc04",
        "name": "Load_Config.FTP2",
        "group": "7c613b90f28b3b65",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Load",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "2b2102d4f5e6e7e1"
            ]
        ]
    },
    {
        "id": "2b2102d4f5e6e7e1",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Load to Config",
        "func": "msg.payload = global.get(\"Config\",msg.payload)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 880,
        "wires": [
            [
                "63e5a24b3f1fb036",
                "2caea71db5338a99",
                "d82160fb2a35c924",
                "60d34541c8eb95cf",
                "a6a60492484d4ec1",
                "eaa025f9292b7f72",
                "7539fc7536640726",
                "bd92cbbb58a08ebc",
                "7645c4224d3b4463"
            ]
        ]
    },
    {
        "id": "928719abd54bfc07",
        "type": "switch",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 540,
        "wires": [
            [
                "0456a86bb8414ecd"
            ],
            [
                "a2189cccfdecb6b2"
            ]
        ]
    },
    {
        "id": "0456a86bb8414ecd",
        "type": "function",
        "z": "1b0c8ad9a67c0c54",
        "name": "FileExist?",
        "func": "let Config = global.get(\"Config\")\nlet Host = Config.FTP1.Host\nlet Port = Config.FTP1.Port\nlet User = Config.FTP1.User\nlet Pass = Config.FTP1.Pass\nlet Directory = Config.FTP1.Directory\n\nlet fileName = msg.fileName\nlet DateDirectory = msg.DateDirectory\n\nmsg.payload =  \"curl -I --silent ftp://\" + User + \":\" + Pass + \"@\" + Host + \":\" + Port + Directory + \"/\" + DateDirectory + \"/\" + fileName\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 480,
        "wires": [
            [
                "937e7fb762b71fab"
            ]
        ]
    },
    {
        "id": "937e7fb762b71fab",
        "type": "exec",
        "z": "1b0c8ad9a67c0c54",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1630,
        "y": 480,
        "wires": [
            [],
            [],
            [
                "b3ac258e8729e118"
            ]
        ]
    },
    {
        "id": "b3ac258e8729e118",
        "type": "switch",
        "z": "1b0c8ad9a67c0c54",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1790,
        "y": 480,
        "wires": [
            [
                "054f38d307da39dd"
            ],
            [
                "a2189cccfdecb6b2"
            ]
        ]
    },
    {
        "id": "6d72165c289aafb4",
        "type": "switch",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 540,
        "wires": [
            [
                "5d32e1c2208a85d3"
            ],
            [
                "8c36e0a5919d9406"
            ]
        ]
    },
    {
        "id": "5d32e1c2208a85d3",
        "type": "function",
        "z": "cba66dcd1fa1961e",
        "name": "FileExist?",
        "func": "let Config = global.get(\"Config\")\nlet Host = Config.FTP2.Host\nlet Port = Config.FTP2.Port\nlet User = Config.FTP2.User\nlet Pass = Config.FTP2.Pass\nlet Directory = Config.FTP2.Directory\n\nlet fileName = msg.fileName\nlet DateDirectory = msg.DateDirectory\n\nmsg.payload =  \"curl -I --silent ftp://\" + User + \":\" + Pass + \"@\" + Host + \":\" + Port + Directory + \"/\" + DateDirectory + \"/\" + fileName\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 480,
        "wires": [
            [
                "79a36d9539984c26"
            ]
        ]
    },
    {
        "id": "79a36d9539984c26",
        "type": "exec",
        "z": "cba66dcd1fa1961e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1630,
        "y": 480,
        "wires": [
            [],
            [],
            [
                "60dab1787572fab9"
            ]
        ]
    },
    {
        "id": "60dab1787572fab9",
        "type": "switch",
        "z": "cba66dcd1fa1961e",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1790,
        "y": 480,
        "wires": [
            [
                "5c24548ab0f28001"
            ],
            [
                "8c36e0a5919d9406"
            ]
        ]
    },
    {
        "id": "88110dd881c5d309",
        "type": "function",
        "z": "927378a3171dc25b",
        "name": "",
        "func": "\n var data={}\n var today = new Date(Date.now())\n var tempDate = new Date(today.setHours(today.getHours() + 7));\n data.TimeStamp = tempDate;\n data.pH = parseFloat(global.get(\"pH\"))\n data.Doduc = parseFloat(global.get(\"Doduc\"))\n msg.collection=\"t_Test\";\n msg.payload =data\n return msg\n \n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "fb8ae4fedf98e5c9"
            ]
        ]
    },
    {
        "id": "fb8ae4fedf98e5c9",
        "type": "mongodb3 in",
        "z": "927378a3171dc25b",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "Insert",
        "collection": "",
        "operation": "insert",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "998c991d99174995"
            ]
        ]
    },
    {
        "id": "ffa73d7ef4ff4c5e",
        "type": "inject",
        "z": "927378a3171dc25b",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "88110dd881c5d309"
            ]
        ]
    },
    {
        "id": "998c991d99174995",
        "type": "debug",
        "z": "927378a3171dc25b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 80,
        "wires": []
    },
    {
        "id": "94aa2a3eb99435d6",
        "type": "function",
        "z": "927378a3171dc25b",
        "name": "",
        "func": "var p1 = parseFloat(global.get(\"pH\"))\nvar a1 = parseFloat(global.get(\"Doduc\"))\n var today = new Date(Date.now())\n var tempDate = new Date(today.setHours(today.getHours() + 7));\n \nvar data =[]\nvar currentMsg = null, outMessage = null\n\ncurrentMsg = {\"_id\":1}\ndata.push(currentMsg)\n\noutMessage= { $set: { \"A\": a1,\"Pressure\" : p1,\"TimeStamp\" : tempDate } }\ndata.push(outMessage)\n\nmsg.payload= data\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "de0a28268adcec38"
            ]
        ]
    },
    {
        "id": "de0a28268adcec38",
        "type": "mongodb3 in",
        "z": "927378a3171dc25b",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "Update",
        "collection": "t_PumpControl",
        "operation": "updateOne",
        "x": 520,
        "y": 180,
        "wires": [
            [
                "998c991d99174995"
            ]
        ]
    },
    {
        "id": "9147efb6a77c8f77",
        "type": "inject",
        "z": "927378a3171dc25b",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "94aa2a3eb99435d6"
            ]
        ]
    },
    {
        "id": "5a36666628fe27ab",
        "type": "inject",
        "z": "dea3599171b05ecc",
        "name": "Trigger_1s",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "1680bea7597f5710"
            ]
        ]
    },
    {
        "id": "1680bea7597f5710",
        "type": "function",
        "z": "dea3599171b05ecc",
        "name": "ModbusTCP_Config",
        "func": "msg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': 0 , 'quantity': 14 } \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 80,
        "wires": [
            [
                "49650bc4cf346960"
            ]
        ]
    },
    {
        "id": "7820e6fb70ade5a0",
        "type": "function",
        "z": "dea3599171b05ecc",
        "name": "Data_Modbus",
        "func": "let data = msg.payload\n\nlet pH = {\n    Value : parseFloat(data.pH).toFixed(4),\n    Status : parseInt((data.pH_Status).toFixed(0)) \n}\n\nlet Doduc = {\n    Value : parseFloat(data.Doduc).toFixed(4),\n    Status : parseInt((data.Doduc_Status).toFixed(0))\n}\n\nlet TOC = {\n    Value : parseFloat(data.TOC).toFixed(4),\n    Status : parseInt((data.TOC_Status).toFixed(0))\n}\n\nglobal.set(\"pH\",pH)\nglobal.set(\"Doduc\",Doduc)\nglobal.set(\"TOC\",TOC)\n\nlet Channels = [\"pH\",\"Doduc\",\"TOC\"]\nglobal.set(\"Channels\",Channels)\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 80,
        "wires": [
            [
                "206d89d8956caab4",
                "da716c062e477fcb"
            ]
        ]
    },
    {
        "id": "49650bc4cf346960",
        "type": "modbus-flex-getter",
        "z": "dea3599171b05ecc",
        "name": "ModbusTCP_Read",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "346b375f3549941b",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": false,
        "x": 590,
        "y": 80,
        "wires": [
            [
                "fd2f4aa7524b9d1b"
            ],
            []
        ]
    },
    {
        "id": "c9583d3138e3758e",
        "type": "function",
        "z": "dea3599171b05ecc",
        "name": "",
        "func": "let pH = msg.payload\n\nmsg.payload = { value: pH, 'fc': 16, 'unitid': 1, 'address': 0 , 'quantity': 2 }  \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 600,
        "wires": [
            [
                "9338ba1efbe1298e"
            ]
        ]
    },
    {
        "id": "73398b34d54f6290",
        "type": "inject",
        "z": "dea3599171b05ecc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "11d4f84f628357a3"
            ]
        ]
    },
    {
        "id": "9338ba1efbe1298e",
        "type": "modbus-flex-write",
        "z": "dea3599171b05ecc",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "2c7693233d97e315",
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "x": 1170,
        "y": 600,
        "wires": [
            [
                "90fd5c8aa0882575"
            ],
            []
        ]
    },
    {
        "id": "90fd5c8aa0882575",
        "type": "debug",
        "z": "dea3599171b05ecc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1330,
        "y": 460,
        "wires": []
    },
    {
        "id": "11d4f84f628357a3",
        "type": "function",
        "z": "dea3599171b05ecc",
        "name": "",
        "func": "let pH = 1.45\n\nmsg.payload = pH\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 600,
        "wires": [
            [
                "0426a8c4a5e4a2f9"
            ]
        ]
    },
    {
        "id": "0426a8c4a5e4a2f9",
        "type": "buffer-maker",
        "z": "dea3599171b05ecc",
        "name": "Float_to_4Byte",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "floatbe",
                "length": 1,
                "dataType": "msg",
                "data": "payload"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 590,
        "y": 600,
        "wires": [
            [
                "4d6e15bd52e85cab",
                "90fd5c8aa0882575"
            ]
        ]
    },
    {
        "id": "3280ee291946e8b5",
        "type": "buffer-parser",
        "z": "dea3599171b05ecc",
        "name": "2Int_to_Float",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "pH",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatbe",
                "name": "pH_Status",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatbe",
                "name": "Doduc",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatbe",
                "name": "Doduc_Status",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatbe",
                "name": "TOC",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatbe",
                "name": "TOC_Status",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "output",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 930,
        "y": 80,
        "wires": [
            [
                "7820e6fb70ade5a0"
            ]
        ]
    },
    {
        "id": "4d6e15bd52e85cab",
        "type": "buffer-parser",
        "z": "dea3599171b05ecc",
        "name": "2Byte_to_UInt",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "item2",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "c9583d3138e3758e",
                "90fd5c8aa0882575"
            ]
        ]
    },
    {
        "id": "b26aaafd7018f605",
        "type": "function",
        "z": "dea3599171b05ecc",
        "name": "Empty_Data",
        "func": "let pH = {\n    Value : parseFloat(0.0).toFixed(4),\n    Status : parseInt((2).toFixed(0))\n}\n\nlet Doduc = {\n    Value : parseFloat(0.0).toFixed(4),\n    Status : parseInt((2).toFixed(0))\n}\n\nlet TOC = {\n    Value : parseFloat(0.0).toFixed(4),\n    Status : parseInt((2).toFixed(0))\n}\n\nglobal.set(\"pH\",pH)\nglobal.set(\"Doduc\",Doduc)\nglobal.set(\"TOC\",TOC)\n\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "fd2f4aa7524b9d1b",
        "type": "switch",
        "z": "dea3599171b05ecc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 80,
        "wires": [
            [
                "3280ee291946e8b5"
            ],
            [
                "b26aaafd7018f605"
            ]
        ]
    },
    {
        "id": "117ce483ba42e2ab",
        "type": "function",
        "z": "3f89b77d17bdbc04",
        "name": "Load to TempConfig",
        "func": "global.set(\"TempConfig\",msg.payload)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "09fdb87ce4ad552b",
        "type": "ui_template",
        "z": "dea3599171b05ecc",
        "group": "71235cca6cca5636",
        "name": "DashBoard",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" >\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" ></script>\n<!-- Google Fonts -->\n<link href=\"https://fonts.googleapis.com/css?family=Roboto:400,700\" rel=\"stylesheet\" type=\"text/css\"> \n<!-- Google Logos -->\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" type=\"text/css\">\n<style>\n        #DashBoard_Test \n        {\n            top: 0px;\n            left: 0px;\n            width: 100% !important;\n          \n        }\n\n        .nr-dashboard-cardpanel \n        {\n            width: 100% !important;\n          \n        }\n\n        #DashBoard_Test_cards \n        {\n            width: 100% !important;\n            \n        }\n\n        .nr-dashboard-template \n        {\n            width: 100% !important;\n          \n        }\n    \n        .box \n        {\n            margin: 5px;\n            padding: 10px;\n            background-color: #0984e3;\n\n            box-shadow: 3px 5px 5px 0 rgba(0,0,0,.2);\n            border-radius: 5px 10px 5px 10px ;\n\n            color: white\n\n        }\n\n        .box.disconnect \n        {\n            background: red\n        }\n\n        .box.calib \n        {\n            background: #f39c12;\n        }\n\n        .box .icon \n        {\n            padding: 5px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n\n            border-right: 1px solid white   ;\n        }\n        .box .icon .material-icons \n        {\n            font-size: 3rem;\n            animation: rotate-animation 2s infinite;\n        }\n\n        @keyframes rotate-animation {\n            0% {\n                transform: rotate(0deg);\n            }\n            50% {\n                transform: rotate(180deg);\n            }\n            100% \n            {\n                transform: rotate(360deg);\n            }\n        }\n\n        .box .title \n        {\n            text-align: center;\n            font-weight: 500;\n            font-size: 1.3rem;\n        }\n\n        .box .value \n        {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n\n            font-size: 1.1rem;\n            font-weight: 500;\n        }\n\n        .mr-2 \n        {\n            margin-right: 5px;\n        }\n    </style>\n<body>\n    <div class=\"container\">\n        <div class=\"row\" id=\"bodyData\">\n            \n        </div>\n    </div>\n    <script>\n        var firstLoad = true;\n        var currentLengthData;\n\n        var scope;\n    \n        scope.$watch('msg', function(msg) {\n            console.log(msg.payload)\n         \n            let data = msg.payload;\n         \n            if(firstLoad == true)\n            {\n                createBoxValue(data);\n                console.log(\"create Data\");\n            }\n            else \n            {\n                if(currentLengthData < data.length || currentLengthData > data.length) \n                {\n                    createBoxValue(data);\n                    console.log(\"create Data\");\n                }\n                else \n                {\n                    updateBoxValue(data);\n                    console.log(\"Update Data\");\n                }\n            } \n        });\n    \n\n        function createBoxValue (data)\n        {\n            let bodyData = document.getElementById('bodyData');\n\n            let content = \"\";\n\n            if(data.length > 0)\n            {\n                for(let i = 0; i< data.length; i++)\n                {\n                    console.log(data[i])\n                    \n                    let status  = \"\";\n                   let isDisconnect = \"\";\n\n                   if(data[i].Status == 0)\n                   {\n                        status = \"Normal\";\n                        isDisconnect = \"\";\n                   }\n                   else if(data[i].Status == 2)\n                   {\n                        status = \"Error\";\n                        isDisconnect = \"disconnect\";\n                   }\n                   else if(data[i].Status == 1) {\n                        status = \"Calibration\";\n                        isDisconnect = \"calib\";\n                   }\n\n                    content += `<div class=\"col-sm-3\">\n                                    <div class=\"box ${isDisconnect}\" id=\"box-device-${i}\">\n                                        <div class=\"row\">\n                                            <div class=\"col-3 icon\">\n                                                <i id=\"notify-icon\" class=\"material-icons\">ac_unit</i>\n                                            </div>\n                                            <div class=\"col-9\">\n                                                <div class=\"title\">\n                                                    ${data[i].Name}\n                                                </div>\n                                                <div class=\"value\" >\n                                                    <span id=\"value-device-${i}\">${data[i].Value}</span>\n                                                    <span id=\"status-device-${i}\">${status}</span>\n                                                </div>\n                                                <div class=\"timestamp\">\n                                                    <span id=\"timestamp-device-${i}\"> ${convertDateToString(data[i].TimeStamp)}</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>`;\n                }\n\n                currentLengthData = data.length;\n                firstLoad = false;\n            }\n\n            bodyData.innerHTML = content;\n        }\n\n        function updateBoxValue (data)\n        {\n            if(data.length > 0)\n            {\n                for(let i = 0; i< data.length; i++) {\n                    let value = document.getElementById(`value-device-${i}`);\n                    let statusDevice = document.getElementById(`status-device-${i}`);\n                    let boxDevice = document.getElementById(`box-device-${i}`);\n                    let timestampDevice = document.getElementById(`timestamp-device-${i}`);\n\n                    value.innerHTML = data[i].Value;\n                    timestampDevice.innerHTML = convertDateToString(data[i].TimeStamp);\n\n                    let status  = \"\";\n                    let isDisconnect = \"\";\n\n                    if(data[i].Status == 0)\n                    {\n                        status = \"Normal\";\n                        if(boxDevice.classList.contains('disconnect'))\n                        {\n                            boxDevice.classList.remove('disconnect');\n                        }\n                        if(boxDevice.classList.contains('calib'))\n                        {\n                            boxDevice.classList.remove('calib');\n                        }\n                    }\n                    else if(data[i].Status == 2)\n                    {\n                        status = \"Error\";\n                        if(!boxDevice.classList.contains('disconnect'))\n                        {\n                            if(boxDevice.classList.contains('calib'))\n                            {\n                                boxDevice.classList.remove('calib');\n                            }\n                            boxDevice.classList.add('disconnect');\n                        }\n                    }\n                    else if(data[i].Status == 1) {\n                        status = \"Calibration\";\n                        if(!boxDevice.classList.contains('calib'))\n                        {\n                            if(boxDevice.classList.contains('disconnect'))\n                            {\n                                boxDevice.classList.remove('disconnect');\n                            }\n                            boxDevice.classList.add('calib');\n                        }\n                    }\n\n                    statusDevice.innerHTML = status;\n                }\n            }\n        }\n\n    function convertDateToString(datetime)\n    {\n        if(datetime != null && datetime != undefined)\n        {\n            let date = new Date(datetime)\n            \n            let year = date.getFullYear();\n            let month = date.getMonth() + 1 < 10 ? `0${date.getMonth() +  1}`: date.getMonth() + 1;\n            let day = date.getDate() < 10 ? `0${date.getDate()}`: date.getDate();\n            let hour = date.getHours() < 10 ? `0${date.getHours()}`: date.getHours();\n            let minute = date.getMinutes() < 10 ? `0${date.getMinutes()}`: date.getMinutes();\n            let second = date.getSeconds() < 10 ? `0${date.getSeconds()}` : date.getSeconds();\n            \n            return `${day}/${month}/${year} ${hour}:${minute}:${second}`;\n        }\n        return \"\";\n    }\n    \n\n    </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1570,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "206d89d8956caab4",
        "type": "function",
        "z": "dea3599171b05ecc",
        "name": "GetDatapHAndDoDuc",
        "func": "let data = global.get('Channels')\n\nlet arrayData = [];\n\nfor(let item of data)\n{\n    let obj = {};\n    obj.Name = item;\n    let objData = global.get(`${item}`);\n    \n    let value;\n    \n    if(objData.Value == null || objData.Value == undefined)\n    {\n        value = \"\";\n    }\n    else \n    {\n        value = objData.Value;\n    }\n    \n    obj.Value = value;\n    obj.Status = objData.Status;\n    obj.TimeStamp = new Date(Date.now())\n    \n    arrayData.push(obj);\n}\n\nmsg.payload = arrayData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 80,
        "wires": [
            [
                "09fdb87ce4ad552b"
            ]
        ]
    },
    {
        "id": "9dbb5f4c98197c31",
        "type": "inject",
        "z": "dcec61fa9fead32c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "8ea8ddd4d7a68349",
                "e2337c33822f64fc"
            ]
        ]
    },
    {
        "id": "8ea8ddd4d7a68349",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "",
        "func": "let message = msg.payload\n\nmsg.payload = \"mosquitto_sub -h 112.78.4.162 -p 1883 -t Andino/#\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "8fa5aaff47c0ab50"
            ]
        ]
    },
    {
        "id": "8fa5aaff47c0ab50",
        "type": "exec",
        "z": "dcec61fa9fead32c",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "22890d615abedcee"
            ],
            [],
            []
        ]
    },
    {
        "id": "1f337795d86a36cd",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "ConvertData",
        "func": "let datas = msg.payload\n\nlet listChannels = [];\n\nlet commonData = [];\n\nlet comonDataOnline = [];\nfor(let item of datas)\n{\n    let data = JSON.parse(item);\n    \n    let tempChannelSplit = \"\";\n    \n    if(data.hasOwnProperty('id'))\n    {\n        \n        if(data.hasOwnProperty('history'))\n        {\n            if(data.history.length > 0)\n            {\n                for(let pro in data.history[0])\n                {\n                    if(pro != \"time\")\n                    {\n                        let str = pro.split('_')[0];\n                        \n                        if(listChannels.indexOf(str) == -1)\n                        {\n                            listChannels.push(str);\n                        }\n                    }\n                }\n                \n                for(let channel of listChannels)\n                {\n                    try \n                    {\n                        let objData = {};\n                        objData.Name = channel;\n                        objData.DeviceId = data.id;\n                        objData.Data = [];\n                        for(let item of data.history)\n                        {\n                            let obj2 = {};\n                            for(let pro in item)\n                            {\n                                if(pro == \"time\")\n                                {\n                                    obj2.TimeStamp = new Date(item[pro]);\n                                }\n                                else if(pro == channel + \"_Value\")\n                                {\n                                    obj2.Value = item[pro];\n                                }\n                                else if(pro == channel + \"_Status\")\n                                {\n                                    obj2.Status = item[pro];\n                                }\n                            }\n                            \n                           objData.Data.push(obj2); \n                        }\n                    \n                        commonData.push(objData);\n                    }\n                    catch(err)\n                    {\n                        console.log(err)\n                    }\n                    \n                }\n        \n            }\n            \n        }\n        \n    }\n}\n\nmsg.payload = commonData;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 220,
        "wires": [
            [
                "85750ef9b4e3ee09"
            ]
        ]
    },
    {
        "id": "0a21cb24659ed98f",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "setGlobalVariable",
        "func": "global.set('countHis', 0);\n\nlet datas = global.get('QueueHis');\n\nglobal.set('lengthHis', datas.length);\nglobal.set('dataHis', datas);\n\nmsg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1850,
        "y": 220,
        "wires": [
            [
                "79ca6a3752628010"
            ]
        ]
    },
    {
        "id": "79ca6a3752628010",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "ConvertDataToInsertDB",
        "func": "let count = global.get('countHis')\nlet length = global.get('lengthHis');\nlet data = global.get('dataHis');\n\n\nlet collection = \"\";\nlet insertData = [];\n\nif(count < length)\n{\n    global.set('isRunNextTimeHis', 1)\n    collection = `t_Data_${data[count].DeviceId}_${data[count].Name}`;\n    \n    for(let item of data[count].Data)\n    {\n        let obj = {};\n        \n        obj.TimeStamp = new Date(item.TimeStamp);\n        obj.Value = item.Value;\n        obj.Status = item.Status;\n        \n        insertData.push(obj);\n    }\n    \n    count += 1;\n    global.set('countHis', count)\n}\nelse if(count == length)\n{\n    global.set('QueueHis', []);\n    global.set('isRunNextTimeHis', 0)\n}\n\nmsg.count = global.get('countHis');\nmsg.collection = collection;\nmsg.payload = insertData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2110,
        "y": 220,
        "wires": [
            [
                "0c53e7b21e630e97"
            ]
        ]
    },
    {
        "id": "f3caf3b65e8f3313",
        "type": "mongodb3 in",
        "z": "dcec61fa9fead32c",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "InsertDB",
        "collection": "",
        "operation": "insert",
        "x": 2320,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0c53e7b21e630e97",
        "type": "switch",
        "z": "dcec61fa9fead32c",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2050,
        "y": 320,
        "wires": [
            [],
            [
                "f3caf3b65e8f3313",
                "79ca6a3752628010"
            ]
        ]
    },
    {
        "id": "2c43cd6fac2f7c28",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "SetGlobalVariableOnline",
        "func": "global.set('countOnline', 0);\nlet datas = global.get('QueueOnline');\n\nglobal.set('lengthOnline', datas.length);\nglobal.set('dataOnline', datas);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1650,
        "y": 140,
        "wires": [
            [
                "9869dfc205298a13"
            ]
        ]
    },
    {
        "id": "836ea31660418377",
        "type": "mongodb3 in",
        "z": "dcec61fa9fead32c",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "CheckExistsChannel",
        "collection": "t_Channel_Configurations",
        "operation": "findOne",
        "x": 1980,
        "y": 620,
        "wires": [
            [
                "51f49ff123bc739c"
            ]
        ]
    },
    {
        "id": "6bb13ea2a7fade1b",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "ConvertDataToInsertOrUpdateChannelConfig",
        "func": "let count = global.get('countOnline');\nlet length = global.get('lengthOnline');\nlet data = global.get('dataOnline');\n\nlet currentChannel = \"\";\n\nlet isOk = 0;\n\n\nif(count < length)\n{\n    currentChannel = data[count].ChannelId;\n    isOk = 1;\n}\nelse \n{\n    currentChannel = \"\";\n    isOk = 0;\n}\nmsg.count = count\nmsg.allow = isOk;\nmsg.payload = {ChannelId: currentChannel}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1470,
        "y": 580,
        "wires": [
            [
                "682b653dbfeba53f"
            ]
        ]
    },
    {
        "id": "51f49ff123bc739c",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "CheckExists",
        "func": "if(msg.payload.hasOwnProperty('_id'))\n{\n    msg.payload = 1;\n}\nelse \n{\n    msg.payload = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2190,
        "y": 580,
        "wires": [
            [
                "fe934b32b9cf206a"
            ]
        ]
    },
    {
        "id": "fe934b32b9cf206a",
        "type": "switch",
        "z": "dcec61fa9fead32c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2370,
        "y": 580,
        "wires": [
            [
                "ffcd83f7c82bb4cc"
            ],
            []
        ]
    },
    {
        "id": "042b22340b9c40f8",
        "type": "mongodb3 in",
        "z": "dcec61fa9fead32c",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "InsertChannelConfig",
        "collection": "t_Channel_Configurations",
        "operation": "insertOne",
        "x": 3000,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "107dcecc2047643c",
        "type": "mongodb3 in",
        "z": "dcec61fa9fead32c",
        "service": "_ext_",
        "configNode": "08b7f0f0ede521a4",
        "name": "UpdateChannelConfig",
        "collection": "t_Channel_Configurations",
        "operation": "updateOne",
        "x": 2640,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ffcd83f7c82bb4cc",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "CreteaDataToInsertChannelConfig",
        "func": "let count = global.get('countOnline');\nlet data  = global.get('dataOnline');\nlet length = global.get('lengthOnline');\n\nlet obj = {};\n\nif(count < length )\n{\n\n    obj.ChannelId = data[count].ChannelId;\n    obj.LoggerId = data[count].LoggerId;\n    obj.ChannelName = data[count].ChannelName;\n    let unit = \"\";\n    \n    if(obj.ChannelId.split('_')[1] == \"pH\")\n    {\n        unit = \"pH\";\n    }\n    else if(obj.ChannelId.split('_')[1] == \"Doduc\")\n    {\n        unit = \"NTU\";\n    }\n    else if(obj.ChannelId.split('_')[1] == \"TOC\")\n    {\n        unit = \"TOC\";\n    }\n    obj.Unit = unit;\n    obj.ForwardFlow = false;\n    obj.ReverseFlow = false;\n    obj.Pressure1 = false;\n    obj.Pressure2 = false;\n    obj.LastValue = data[count].Value;\n    obj.Status = data[count].Status;\n    obj.TimeStamp = data[count].TimeStamp;\n    obj.LastIndex = null;\n    obj.IndexTimeStamp = null;\n    obj.DisplayOnLabel = true;\n\n    \n    count += 1;\n    \n    global.set('countOnline', count);\n    msg.payload = obj;\n    msg.isOk = 1;\n}\nelse \n{\n    msg.payload = {};\n    msg.isOk = 0;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2570,
        "y": 580,
        "wires": [
            [
                "76da303499ab3f09"
            ]
        ]
    },
    {
        "id": "9bf822fdeebd9fbc",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "UpdateChannelConfig",
        "func": "let count = global.get('countOnline');\nlet data  = global.get('dataOnline');\nlet length = global.get('lengthOnline');\n\nlet objFilter = {};\nlet objUpdate = {};\n\nif(count < length)\n{\n    global.set('isRunNextTimeOnline', 1)\n    objFilter.ChannelId = data[count].ChannelId;\n    \n    objUpdate.LastValue = data[count].Value;\n    objUpdate.TimeStamp = data[count].TimeStamp;\n    objUpdate.Status = data[count].Status;\n    \n    count += 1;\n    \n    global.set('countOnline', count);\n}\nelse if(count == length)\n{\n    global.set('QueueOnline', []);\n    global.set('isRunNextTimeOnline', 0)\n}\n\n\nlet tmp = [];\n\nmsg.payload = [];\n\nmsg.c =count;\n\ntmp.push(objFilter)\ntmp.push({$set : {\"LastValue\": objUpdate.LastValue, \"TimeStamp\": objUpdate.TimeStamp, \"Status\": objUpdate.Status} })\n\nmsg.payload = tmp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2040,
        "y": 140,
        "wires": [
            [
                "9448379df8987e2d"
            ]
        ]
    },
    {
        "id": "76da303499ab3f09",
        "type": "switch",
        "z": "dcec61fa9fead32c",
        "name": "",
        "property": "isOk",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2810,
        "y": 580,
        "wires": [
            [],
            [
                "042b22340b9c40f8"
            ]
        ]
    },
    {
        "id": "682b653dbfeba53f",
        "type": "switch",
        "z": "dcec61fa9fead32c",
        "name": "",
        "property": "allow",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1830,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "22890d615abedcee",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "SplitData",
        "func": "let data = msg.payload.split(\"\\n\");\n\n//let temp = '{\"id\":\"BVT08\",\"sitename\":\"Tang Nhon Phu A67\",\"online\":{\"time\":\"2021-09-14T23:57:49.458Z\",\"pH_Value\":0,\"pH_Status\":2,\"Doduc_Value\":0,\"Doduc_Status\":2,\"TOC_Value\":0,\"TOC_Status\":2,\"CPU\":0,\"Mode\":0},\"history\":[]}\\n{\"id\":\"BVT10\",\"sitename\":\"Tang Nhon Phu A67\",\"online\":{\"time\":\"2021-09-14T23:57:49.458Z\",\"pH_Value\":0,\"pH_Status\":2,\"Doduc_Value\":0,\"Doduc_Status\":2,\"TOC_Value\":0,\"TOC_Status\":2,\"CPU\":0,\"Mode\":0},\"history\":[]}\\n{\"id\":\"BVT09\",\"sitename\":\"Tang Nhon Phu A67\",\"online\":{\"time\":\"2021-09-14T23:57:49.458Z\",\"pH_Value\":0,\"pH_Status\":2,\"Doduc_Value\":0,\"Doduc_Status\":2,\"TOC_Value\":0,\"TOC_Status\":2,\"CPU\":0,\"Mode\":0},\"history\":[]}'\n\n//let data = temp.split('\\n');\n\ndata = data.filter(function(e) \n{\n    return e !== \"\";\n})\n\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 180,
        "wires": [
            [
                "1f337795d86a36cd",
                "dfe7e01324e02806",
                "6c13d0893eb934ab"
            ]
        ]
    },
    {
        "id": "5d6bc1f955779e56",
        "type": "debug",
        "z": "dcec61fa9fead32c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1450,
        "y": 40,
        "wires": []
    },
    {
        "id": "4374f2c147cfef82",
        "type": "debug",
        "z": "dcec61fa9fead32c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[1]",
        "targetType": "msg",
        "x": 2640,
        "y": 60,
        "wires": []
    },
    {
        "id": "6c13d0893eb934ab",
        "type": "debug",
        "z": "dcec61fa9fead32c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 750,
        "y": 60,
        "wires": []
    },
    {
        "id": "9448379df8987e2d",
        "type": "switch",
        "z": "dcec61fa9fead32c",
        "name": "",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2310,
        "y": 140,
        "wires": [
            [
                "107dcecc2047643c",
                "9bf822fdeebd9fbc"
            ]
        ]
    },
    {
        "id": "6bd6e433ab4e7c07",
        "type": "debug",
        "z": "dcec61fa9fead32c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "c",
        "targetType": "msg",
        "x": 2610,
        "y": 220,
        "wires": []
    },
    {
        "id": "9869dfc205298a13",
        "type": "switch",
        "z": "dcec61fa9fead32c",
        "name": "",
        "property": "online.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1830,
        "y": 140,
        "wires": [
            [
                "9bf822fdeebd9fbc"
            ],
            []
        ]
    },
    {
        "id": "a80d9ebffa030374",
        "type": "debug",
        "z": "dcec61fa9fead32c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0]",
        "targetType": "msg",
        "x": 2640,
        "y": 100,
        "wires": []
    },
    {
        "id": "dfe7e01324e02806",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "ConvertDataOnline",
        "func": "let datas = msg.payload\n\nlet listChannelsOnline = [];\n\nlet comonDataOnline = [];\nfor(let item of datas)\n{\n    let data = JSON.parse(item);\n    \n    let tempChannelSplit = \"\";\n    \n    if(data.hasOwnProperty('id'))\n    {\n        if(data.hasOwnProperty('online'))\n        {\n            for(let  key in data.online)\n            {\n                if(key != \"time\" && key != \"CPU\" && key != \"Mode\")\n                {\n                    let str2 = key.split('_')[0];\n                    \n                    if(listChannelsOnline.indexOf(str2) == -1)\n                    {\n                        listChannelsOnline.push(str2);\n                    }\n                }\n            }\n            \n            for(let channel of listChannelsOnline)\n            {\n                if(data.online.hasOwnProperty(`${channel}_Value`) && data.online.hasOwnProperty(`${channel}_Status`))\n                {\n                    let objDataOnline = {};\n                    objDataOnline.ChannelId = `${data.id}_${channel}`;\n                    objDataOnline.LoggerId = data.id;\n                    objDataOnline.TimeStamp = new Date(data.online.time);\n                    objDataOnline.Value = data.online[`${channel}_Value`];\n                    objDataOnline.Status = data.online[`${channel}_Status`];\n                    \n                    comonDataOnline.push(objDataOnline);\n                }\n            }\n        }\n        \n    }\n}\n\nmsg.online = comonDataOnline;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 140,
        "wires": [
            [
                "df684453a29d4853"
            ]
        ]
    },
    {
        "id": "e2337c33822f64fc",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "DeclareQueueDataOnline",
        "func": "global.set('QueueOnline', []);\nglobal.set('isRunNextTimeOnline', 0)\nglobal.set('QueueHis', []);\nglobal.set('isRunNextTimeHis', 0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "df684453a29d4853",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "SetQueueDataOnline",
        "func": "let datas = global.get('QueueOnline');\n\nlet temp = msg.online;\n\nfor(let item of temp)\n{\n    datas.push(item)\n}\n\nglobal.set('QueueOnline', datas);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 140,
        "wires": [
            [
                "07207e05583e1e5a"
            ]
        ]
    },
    {
        "id": "07207e05583e1e5a",
        "type": "delay",
        "z": "dcec61fa9fead32c",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1160,
        "y": 140,
        "wires": [
            [
                "d181a9f08faf6e09"
            ]
        ]
    },
    {
        "id": "59fc64e8aa666504",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "",
        "func": "msg.payload = global.get('QueueOnline');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 60,
        "wires": [
            [
                "5d6bc1f955779e56"
            ]
        ]
    },
    {
        "id": "d181a9f08faf6e09",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "GetNextRun",
        "func": "msg.nextTimeOnline = global.get('isRunNextTimeOnline')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 140,
        "wires": [
            [
                "a6fbae6168d6e9e8"
            ]
        ]
    },
    {
        "id": "a6fbae6168d6e9e8",
        "type": "switch",
        "z": "dcec61fa9fead32c",
        "name": "",
        "property": "nextTimeOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1470,
        "y": 140,
        "wires": [
            [
                "2c43cd6fac2f7c28"
            ]
        ]
    },
    {
        "id": "85750ef9b4e3ee09",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "SetQueueDataHistory",
        "func": "let datas = global.get('QueueHis');\n\nlet temp = msg.payload;\n\nfor(let item of temp)\n{\n    datas.push(item)\n}\n\nglobal.set('QueueHis', datas);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 220,
        "wires": [
            [
                "e9ba1c94543d1bee"
            ]
        ]
    },
    {
        "id": "e9ba1c94543d1bee",
        "type": "delay",
        "z": "dcec61fa9fead32c",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "6b0ec8a05bd196ec"
            ]
        ]
    },
    {
        "id": "ea5adfef21e4b62e",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "GetNextRun",
        "func": "msg.nextTimeHis = global.get('isRunNextTimeHis')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 220,
        "wires": [
            [
                "c9133bbc89e474e8"
            ]
        ]
    },
    {
        "id": "c9133bbc89e474e8",
        "type": "switch",
        "z": "dcec61fa9fead32c",
        "name": "",
        "property": "nextTimeHis",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1690,
        "y": 220,
        "wires": [
            [
                "0a21cb24659ed98f"
            ]
        ]
    },
    {
        "id": "d45f89ea610f503b",
        "type": "debug",
        "z": "dcec61fa9fead32c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "collection",
        "targetType": "msg",
        "x": 2340,
        "y": 200,
        "wires": []
    },
    {
        "id": "bce9c7fe99ac03f8",
        "type": "debug",
        "z": "dcec61fa9fead32c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 2330,
        "y": 260,
        "wires": []
    },
    {
        "id": "6b0ec8a05bd196ec",
        "type": "function",
        "z": "dcec61fa9fead32c",
        "name": "",
        "func": "msg.payload = global.get('QueueHis');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 220,
        "wires": [
            [
                "151daa94aadddb5d"
            ]
        ]
    },
    {
        "id": "151daa94aadddb5d",
        "type": "switch",
        "z": "dcec61fa9fead32c",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1390,
        "y": 220,
        "wires": [
            [
                "ea5adfef21e4b62e"
            ]
        ]
    },
    {
        "id": "2a8c59856b6a6ee0",
        "type": "debug",
        "z": "dcec61fa9fead32c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2000,
        "y": 560,
        "wires": []
    },
    {
        "id": "76bb96ae99e8d6f5",
        "type": "ui_template",
        "z": "dea3599171b05ecc",
        "group": "642488e289111dfd",
        "name": "TongQuan",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" >\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" ></script>\n<!-- Google Fonts -->\n<link href=\"https://fonts.googleapis.com/css?family=Roboto:400,700\" rel=\"stylesheet\" type=\"text/css\"> \n<!-- Google Logos -->\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" type=\"text/css\">\n<style>\n        #TongQuan_TongQuan\n        {\n            top: 0px;\n            left: 0px;\n            width: 100% !important;\n            height: 100% !important;\n        }\n\n        .nr-dashboard-cardpanel \n        {\n            width: 100% !important;\n            height: 100% !important;\n        }\n\n        #TongQuan_TongQuan_cards \n        {\n            width: 100% !important;\n            \n        }\n\n        .nr-dashboard-template \n        {\n            width: 100% !important;\n            height: 100% !important;\n        }\n        .nr-dashboard-cardcontainer\n        {\n            height: 100% !important;\n        }\n    \n        .box \n        {\n            margin: 5px;\n            padding: 10px;\n            background-color: #0984e3;\n\n            box-shadow: 3px 5px 5px 0 rgba(0,0,0,.2);\n            border-radius: 5px 10px 5px 10px ;\n\n            color: white\n\n        }\n        \n        .box.mode\n        {\n            margin: 5px;\n            padding: 10px;\n\n            box-shadow: 3px 5px 5px 0 rgba(0,0,0,.2);\n            border-radius: 5px 10px 5px 10px ;\n\n            color: white\n\n        }\n        \n        .box.status \n        {\n            background: #2ecc71\n        }\n\n        .box.disconnect \n        {\n            background: red\n        }\n\n        .box.calib \n        {\n            background: #f39c12;\n        }\n\n        .box .icon \n        {\n            padding: 5px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n\n            border-right: 1px solid white   ;\n        }\n        .box .icon .material-icons \n        {\n            font-size: 3rem;\n            animation: rotate-animation 2s infinite;\n        }\n\n        @keyframes rotate-animation {\n            0% {\n                transform: rotate(0deg);\n            }\n            50% {\n                transform: rotate(180deg);\n            }\n            100% \n            {\n                transform: rotate(360deg);\n            }\n        }\n\n        .box .title \n        {\n            text-align: center;\n            font-weight: 500;\n            font-size: 1.3rem;\n        }\n\n        .box .value \n        {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n\n            font-size: 1.1rem;\n            font-weight: 500;\n        }\n\n        .mr-2 \n        {\n            margin-right: 5px;\n        }\n        \n        .masonry-container {\n            width: 99% !important;\n            height: 99% !important;\n            min-height: 99% !important;\n        }\n        \n        .row.box-p-b {\n            padding: 20px;\n            box-shadow: 0 0 5px 0 rgb(0 0 0 / 20%);\n            border-radius: 10px;\n        }\n        \n        .name-device\n        {\n            color: green;\n            text-decoration: underline;\n        }\n        \n        .close-full\n        {\n            background: green;\n            font-size: 1.1rem !important;\n            animation: anime-closeFull 2s infinite !important;\n        }\n        \n        @keyframes anime-closeFull {\n    0% {\n        color: white;\n        background: green;\n    }\n\n    50% {\n        color: white;\n        background: red;\n    }\n\n    100% {\n        color: white;\n        background: green;\n    }\n}\n\n .closing \n {\n    background: blue;\n    font-size: 1.1rem !important;\n    animation: anime-closing 1s infinite !important;\n }\n\n@keyframes anime-closing {\n    0% {\n        color: white;\n        background: blue;\n    }\n\n    50% {\n        color: white;\n        background: red;\n    }\n\n    100% {\n        color: white;\n        background: blue;\n    }\n}\n\n    .opening \n    {\n        animation: anime-opening 1s infinite !important;\n        font-size: 1.1rem !important;\n    }\n\n@keyframes anime-opening {\n    0% {\n        color: white;\n        background: blue;\n    }\n\n    50% {\n        color: white;\n        background: green;\n    }\n\n    100% {\n        color: white;\n        background: blue;\n    }\n}\n\n    .hold {\n        background: blue;\n        color: white !important;\n        font-size: 1.1rem !important;\n    }\n    \n    .open-full \n    {\n        animation: anime-openFull 2s infinite !important;\n        font-size: 1.1rem !important;\n    }\n\n@keyframes anime-openFull {\n    0% {\n        color: white;\n        background: red;\n    }\n\n    50% {\n        color: white;\n        background: green;\n    }\n\n    100% {\n        color: white;\n        background: red;\n    }\n}\n\n\n.box.connected {\n    background: green;\n}\n\n.box.disconnected {\n    background: red;\n}\n    </style>\n<body>\n    <div class=\"container\">\n         <div class=\"row box-p-b\" id=\"bodyInfo\">\n            \n        </div>\n        <div class=\"row box-p-b mt-3\" id=\"bodyPB\">\n            \n        </div>\n        <div class=\"row box-p-b mt-3\" id=\"bodyP\">\n            \n        </div>\n    </div>\n    <script>\n        var firstLoad = true;\n        var currentLengthDataPB;\n        var currentLengthDataP;\n\n        var scope;\n    \n        scope.$watch('msg', function(msg) {\n            console.log(msg.payload)\n         \n            let data = msg.payload;\n         \n            if(firstLoad == true)\n            {\n                createInfor(data[0][0]);\n                createBoxValue(data[1]);\n                createP(data[2])\n                \n                firstLoad = true;\n            }\n            else \n            {\n                if(data[0][0].hasOwnProperty('Name') && data[0][0].hasOwnProperty('Mode') && data[0][0].hasOwnProperty('Status'))\n                {\n                    updateDataInfor(data[0]);\n                }\n                else \n                {\n                    createInfor(data[0]);\n                }\n                if(currentLengthDataPB < data[1].length || currentLengthDataPB > data[1].length) \n                {\n                    createBoxValue(data[1]);\n                }\n                else \n                {\n                    updateBoxValue(data[1]);\n                }\n                if(currentLengthDataP < data[2].length || currentLengthDataP > data[2].length) \n                {\n                    createP(data[2]);\n                }\n                else \n                {\n                    updateDataP(data[2]);\n                }\n            } \n        });\n    \n\n        function createBoxValue (data)\n        {\n            let bodyData = document.getElementById('bodyPB');\n\n            let content = \"\";\n\n            if(data.length > 0)\n            {\n                content += `<h5 class=\"text-center\">Áp Suất Và Điện Áp</h5>`\n                \n                for(let i = 0; i< data.length; i++)\n                {\n                    let status  = \"\";\n                   let isDisconnect = \"\";\n                    if(data[i].hasOwnProperty('Status'))\n                    {\n    \n                       if(data[i].Status == 0)\n                       {\n                            status = \"Normal\";\n                            isDisconnect = \"\";\n                       }\n                       else if(data[i].Status == 2)\n                       {\n                            status = \"Error\";\n                            isDisconnect = \"disconnect\";\n                       }\n                       else if(data[i].Status == 1) {\n                            status = \"Calibration\";\n                            isDisconnect = \"calib\";\n                       }\n                    }\n                    else \n                    {\n                        status = \"Normal\";\n                        isDisconnect = \"\";\n                    }\n                    \n                    \n\n                    content += `<div class=\"col-sm-3\">\n                                    <div class=\"box ${isDisconnect}\" id=\"box-device-${i}\">\n                                        <div class=\"row\">\n                                            <div class=\"col-3 icon\">\n                                                <i id=\"notify-icon\" class=\"material-icons\">ac_unit</i>\n                                            </div>\n                                            <div class=\"col-9\">\n                                                <div class=\"title\">\n                                                    ${data[i].Name}\n                                                </div>\n                                                <div class=\"value\" >\n                                                    <span id=\"value-device-${i}\">${data[i].Value}</span>\n                                                </div>\n                                                <div class=\"timestamp\">\n                                                    <span id=\"timestamp-device-${i}\"> ${convertDateToString(data[i].TimeStamp)}</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>`;\n                }\n\n                currentLengthDataPB = data.length;\n            }\n\n            bodyData.innerHTML = content;\n        }\n\n        function createInfor(data)\n        {\n            let body = document.getElementById('bodyInfo');\n            \n            console.log(data)\n            \n            let content = \"\";\n            if(data.hasOwnProperty('Name'))\n            {\n                \n                if(data.Name != null && data.Name != undefined)\n                {\n                    content += `<h5 class=\"text-center\">Thông Tin Thiết Bị</h5>`;\n                    content += `<h6 class=\"text-center\">Tên Trạm: <span class=\"name-device\" id=\"name\">${data.Name}</span></h6>`\n                }\n            }\n        \n            if(data.hasOwnProperty('Mode'))\n            {\n                if(data.Mode != null && data.Mode != undefined)\n                {\n                    \n                    let mode = \"\";\n                    if(data.Mode == 0)\n                    {\n                        mode = \"Local\";\n                    }\n                    else if(data.Mode == 2)\n                    {\n                        mode =\"Auto\";\n                    }\n                    else if(data.Mode == 1)\n                    {\n                        mode = \"Man\";\n                    }\n                    \n                    content += `<div class=\"col-sm-3\">\n                                        <div class=\"box status\" >\n                                            <div class=\"row\">\n                                                <div class=\"col-3 icon\">\n                                                    <i id=\"notify-icon\" class=\"material-icons\">ac_unit</i>\n                                                </div>\n                                                <div class=\"col-9\">\n                                                    <div class=\"title\" id=\"mode\">\n                                                        Chế Độ: ${mode}\n                                                    </div>\n                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>`;\n                }\n            }\n            if(data.hasOwnProperty('Status'))\n            {\n                if(data.Status != null && data.Status != undefined)\n                {\n                    let status = \"\";\n                    let color = \"\";\n                    if(data.Status == 0)\n                    {\n                        status = \"Không đủ áp\";\n                        color=\"close-full\";\n                    }\n                    else if(data.Status == 1)\n                    {\n                        status = \"Đang mở van\";\n                        color = \"closing\";\n                    }\n                    else if(data.Status == 2)\n                    {\n                        status = \"Giữ áp\";\n                        color=\"hold\";\n                    }\n                    else if(data.Status == 3)\n                    {\n                        status = \"Đang đóng van\"\n                        color=\"opening\";\n                    }\n                    else if(data.Status == 4)\n                    {\n                        status = \"không thể giải áp\";\n                        color=\"open-full\";\n                    }\n                    \n                    content += `<div class=\"col-sm-3\">\n                                        <div class=\"box mode ${color}\" >\n                                            <div class=\"row\">\n                                                <div class=\"col-3 icon\">\n                                                    <i id=\"notify-icon\" class=\"material-icons\">ac_unit</i>\n                                                </div>\n                                                <div class=\"col-9\">\n                                                    <div class=\"title\" id=\"status\">\n                                                        Trạng Thái: ${status}\n                                                    </div>\n                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>`;\n                }\n            }\n            \n            if(data.hasOwnProperty('TimeStamp'))\n            {\n                let connect = \"connected\";\n                if(Date.now() - data.TimeStamp > 3600000)\n                {\n                    connect = \"disconnected\"\n                }\n                else {\n                    connect = \"connected\";\n                }\n                \n                content += `<div class=\"col-sm-3\">\n                                        <div class=\"box ${connect} box-status-valve\" >\n                                            <div class=\"row\">\n                                                <div class=\"col-3 icon\">\n                                                    <i id=\"notify-icon\" class=\"material-icons\">ac_unit</i>\n                                                </div>\n                                                <div class=\"col-9\">\n                                                    <div class=\"title\" id=\"status-valve\">\n                                                        Tình Trạng Van: ${connect}\n                                                    </div>\n                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>`;\n            }\n            \n            body.innerHTML = content;\n        }\n\n        function createP(data)\n        {\n            let bodyData = document.getElementById('bodyP');\n\n            let content = \"\";\n\n            if(data.length > 0)\n            {\n                content += `<h5 class=\"text-center\">Áp suất đặt (bar)</h5>`\n                \n                for(let i = 0; i< data.length; i++)\n                {\n                    let status  = \"\";\n                   let isDisconnect = \"\";\n                    if(data[i].hasOwnProperty('Status'))\n                    {\n    \n                       if(data[i].Status == 0)\n                       {\n                            status = \"Normal\";\n                            isDisconnect = \"\";\n                       }\n                       else if(data[i].Status == 2)\n                       {\n                            status = \"Error\";\n                            isDisconnect = \"disconnect\";\n                       }\n                       else if(data[i].Status == 1) {\n                            status = \"Calibration\";\n                            isDisconnect = \"calib\";\n                       }\n                    }\n                    else \n                    {\n                        status = \"Normal\";\n                        isDisconnect = \"\";\n                    }\n                    \n                    \n\n                    content += `<div class=\"col-sm-3\">\n                                    <div class=\"box ${isDisconnect}\" id=\"box-device-${i}\">\n                                        <div class=\"row\">\n                                            <div class=\"col-3 icon\">\n                                                <i id=\"notify-icon\" class=\"material-icons\">ac_unit</i>\n                                            </div>\n                                            <div class=\"col-9\">\n                                                <div class=\"title\">\n                                                    ${data[i].Name}\n                                                </div>\n                                                <div class=\"value\" >\n                                                    <span id=\"value-device-${i}\">${data[i].Value}</span>\n                                                </div>\n                                                <div class=\"timestamp\">\n                                                    <span id=\"timestamp-device-${i}\"> ${convertDateToString(data[i].TimeStamp)}</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>`;\n                }\n\n                currentLengthDataP = data.length;\n            }\n\n            bodyData.innerHTML = content;\n        }\n\n        function updateBoxValue (data)\n        {\n            if(data.length > 0)\n            {\n                for(let i = 0; i< data.length; i++) {\n                    let value = document.getElementById(`value-device-${i}`);\n                    let boxDevice = document.getElementById(`box-device-${i}`);\n                    let timestampDevice = document.getElementById(`timestamp-device-${i}`);\n\n                    value.innerHTML = data[i].Value;\n                    timestampDevice.innerHTML = convertDateToString(data[i].TimeStamp);\n\n                    let status  = \"\";\n                    let isDisconnect = \"\";\n                    if(data[i].hasOwnProperty('Status'))\n                    {\n                        if(data[i].Status == 0)\n                        {\n                            status = \"Normal\";\n                            if(boxDevice.classList.contains('disconnect'))\n                            {\n                                boxDevice.classList.remove('disconnect');\n                            }\n                            if(boxDevice.classList.contains('calib'))\n                            {\n                                boxDevice.classList.remove('calib');\n                            }\n                        }\n                        else if(data[i].Status == 2)\n                        {\n                            status = \"Error\";\n                            if(!boxDevice.classList.contains('disconnect'))\n                            {\n                                if(boxDevice.classList.contains('calib'))\n                                {\n                                    boxDevice.classList.remove('calib');\n                                }\n                                boxDevice.classList.add('disconnect');\n                            }\n                        }\n                        else if(data[i].Status == 1) {\n                            status = \"Calibration\";\n                            if(!boxDevice.classList.contains('calib'))\n                            {\n                                if(boxDevice.classList.contains('disconnect'))\n                                {\n                                    boxDevice.classList.remove('disconnect');\n                                }\n                                boxDevice.classList.add('calib');\n                            }\n                        }\n                    }\n                    else \n                    {\n                        status = \"Normal\";\n                        if(boxDevice.classList.contains('disconnect'))\n                        {\n                            boxDevice.classList.remove('disconnect');\n                        }\n                        if(boxDevice.classList.contains('calib'))\n                        {\n                            boxDevice.classList.remove('calib');\n                        }\n                    }\n\n                }\n            }\n        }\n\n        function updateDataInfor(data)\n        {\n            \n            if(data.hasOwnProperty('Name'))\n            {\n                if(data.Name != null && data.Name != undefined)\n                {\n                    document.getElementById('name').innerHTML = data.Name;\n                }\n            }\n            if(data.hasOwnProperty('Mode'))\n            {\n                if(data.Mode != null && data.Mode != undefined)\n                {\n                    \n                    let mode = \"\";\n                    if(data.Mode == 0)\n                    {\n                        mode = \"Local\";\n                    }\n                    else if(data.Mode == 2)\n                    {\n                        mode =\"Auto\";\n                    }\n                    else if(data.Mode == 1)\n                    {\n                        mode = \"Man\";\n                    }\n                    \n                    document.getElementById('mode').innerHTML = \"Chế Độ: \" +  mode;\n                }\n                \n            }\n            if(data.hasOwnProperty('Status'))\n            {\n                if(data.Status != null && data.Status != undefined)\n                {\n                    let dom = document.getElementById('status');\n                    \n                    let color = \"\";\n                    if(data.Status == 0)\n                    {\n                        status = \"Không đủ áp\";\n                        dom.classList.remove('closing');\n                        dom.classList.remove('hold');\n                        dom.classList.remove('openning');\n                        dom.classList.remove('open-full');\n                        dom.classList.add('close-full');\n                    }\n                    else if(data.Status == 1)\n                    {\n                        status = \"Đang mở van\";\n                        dom.classList.remove('hold');\n                        dom.classList.remove('openning');\n                        dom.classList.remove('open-full');\n                        dom.classList.remove('close-full');\n                        dom.classList.add('closing');\n                    }\n                    else if(data.Status == 2)\n                    {\n                        status = \"Giữ áp\";\n                        dom.classList.remove('closing');\n                        dom.classList.remove('openning');\n                        dom.classList.remove('open-full');\n                        dom.classList.remove('close-full');\n                        dom.classList.add('hold');\n                    }\n                    else if(data.Status == 3)\n                    {\n                        status = \"Đang đóng van\"\n                        dom.classList.remove('closing');\n                        dom.classList.remove('hold');\n                        dom.classList.remove('open-full');\n                        dom.classList.remove('close-full');\n                        dom.classList.add('openning');\n                    }\n                    else if(data.Status == 4)\n                    {\n                        status = \"không thể giải áp\";\n                        dom.classList.remove('closing');\n                        dom.classList.remove('hold');\n                        dom.classList.remove('openning');\n                        dom.classList.remove('close-full');\n                        dom.classList.add('open-full');\n                    }\n                    \n                    dom.innerHTML = \"Trạng Thái: \" + status;\n                }\n            }\n            \n            if(data.hasOwnProperty('TimeStamp'))\n            {\n                let connect = \"connected\";\n                \n                let statusValve = document.getElementById('status-valve');\n                let boxStatusValve = document.getElementById('box-status-valve');\n                \n                if(Date.now() - data.TimeStamp > 3600000)\n                {\n                    connect = \"disconnected\"\n                    if(boxStatusValve.classList.contains('connected'))\n                    {\n                        boxStatusValve.classList.remove('connected');\n                        boxStatusValve.classList.add('disconnected');\n                    }\n                    else \n                    {\n                        boxStatusValve.classList.add('disconnected');\n                    }\n                }\n                else {\n                    connect = \"connected\";\n                    if(boxStatusValve.classList.contains('disconnected'))\n                    {\n                        boxStatusValve.classList.remove('disconnected');\n                        boxStatusValve.classList.add('connected');\n                    }\n                    else \n                    {\n                        boxStatusValve.classList.add('connected');\n                    }\n                }\n                \n                statusValve.innerHTML = `Tình Trạng Van: ${connect}`\n                \n            \n            }\n        }\n        \n        function updateDataP (data)\n        {\n            if(data.length > 0)\n            {\n                for(let i = 0; i< data.length; i++) {\n                    let value = document.getElementById(`value-device-${i}`);\n                    let boxDevice = document.getElementById(`box-device-${i}`);\n                    let timestampDevice = document.getElementById(`timestamp-device-${i}`);\n\n                    value.innerHTML = data[i].Value;\n                    timestampDevice.innerHTML = convertDateToString(data[i].TimeStamp);\n\n                    let status  = \"\";\n                    let isDisconnect = \"\";\n                    if(data[i].hasOwnProperty('Status'))\n                    {\n                        if(data[i].Status == 0)\n                        {\n                            status = \"Normal\";\n                            if(boxDevice.classList.contains('disconnect'))\n                            {\n                                boxDevice.classList.remove('disconnect');\n                            }\n                            if(boxDevice.classList.contains('calib'))\n                            {\n                                boxDevice.classList.remove('calib');\n                            }\n                        }\n                        else if(data[i].Status == 2)\n                        {\n                            status = \"Error\";\n                            if(!boxDevice.classList.contains('disconnect'))\n                            {\n                                if(boxDevice.classList.contains('calib'))\n                                {\n                                    boxDevice.classList.remove('calib');\n                                }\n                                boxDevice.classList.add('disconnect');\n                            }\n                        }\n                        else if(data[i].Status == 1) {\n                            status = \"Calibration\";\n                            if(!boxDevice.classList.contains('calib'))\n                            {\n                                if(boxDevice.classList.contains('disconnect'))\n                                {\n                                    boxDevice.classList.remove('disconnect');\n                                }\n                                boxDevice.classList.add('calib');\n                            }\n                        }\n                    }\n                    else \n                    {\n                        status = \"Normal\";\n                        if(boxDevice.classList.contains('disconnect'))\n                        {\n                            boxDevice.classList.remove('disconnect');\n                        }\n                        if(boxDevice.classList.contains('calib'))\n                        {\n                            boxDevice.classList.remove('calib');\n                        }\n                    }\n\n                }\n            }\n        }\n\n        function convertDateToString(datetime)\n        {\n            if(datetime != null && datetime != undefined)\n            {\n                let date = new Date(datetime)\n                \n                let year = date.getFullYear();\n                let month = date.getMonth() + 1 < 10 ? `0${date.getMonth() +  1}`: date.getMonth() + 1;\n                let day = date.getDate() < 10 ? `0${date.getDate()}`: date.getDate();\n                let hour = date.getHours() < 10 ? `0${date.getHours()}`: date.getHours();\n                let minute = date.getMinutes() < 10 ? `0${date.getMinutes()}`: date.getMinutes();\n                let second = date.getSeconds() < 10 ? `0${date.getSeconds()}` : date.getSeconds();\n                \n                return `${day}/${month}/${year} ${hour}:${minute}:${second}`;\n            }\n            return \"\";\n        }\n    \n\n    </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 590,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "25ccb286ca498cbe",
        "type": "inject",
        "z": "dea3599171b05ecc",
        "name": "",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "30eca2b0df4fe5fe"
            ]
        ]
    },
    {
        "id": "30eca2b0df4fe5fe",
        "type": "function",
        "z": "dea3599171b05ecc",
        "name": "SimulateData",
        "func": "let result = [];\n\nlet dataInfor = [];\nlet objInfor = {};\n\nobjInfor.Name = global.get(\"PRV.Name\") || \"V002\";\nobjInfor.Mode = global.get(\"PRV.Mode\") || 0;\nobjInfor.Status = global.get(\"PRV.Status\") || 4;\nobjInfor.TimeStamp = global.get('PRV.TimeStamp') || new Date(Date.now())\ndataInfor.push(objInfor);\n\nresult.push(dataInfor);\n\nlet objPsetCurrent = {};\nobjPsetCurrent.Name = \"ASĐHT\";\nobjPsetCurrent.Status = 0;\nobjPsetCurrent.Value = global.get(\"PRV.M0\")  || 2.0;\nobjPsetCurrent.TimeStamp = new Date(Date.now());\n\nlet objP1 = {};\nobjP1.Name = \"P1\";\n//objP1.Status = 0;\nobjP1.Value = global.get(\"PRV.P1\") || 10.0;\nobjP1.TimeStamp = new Date(Date.now());\n\nlet objP2 = {};\nobjP2.Name = \"P2\";\nobjP2.Status = 0;\nobjP2.Value = global.get('PRV.P2') ||  10.0;\nobjP2.TimeStamp = new Date(Date.now());\n\nlet objTemp = {};\nobjTemp.Name = \"Nhiệt Độ\";\nobjTemp.Status = 0;\nobjTemp.Value = global.get(\"PRV.Temp\") || 10.0;\nobjTemp.TimeStamp = new Date(Date.now());\n\nlet objHu = {};\nobjHu.Name = \"Độ Ẩm\";\nobjHu.Status = 0;\nobjHu.Value = global.get(\"PRV.Humidity\") || 10.0;\nobjHu.TimeStamp = new Date(Date.now());\n\nlet objBattery = {};\nobjBattery.Name = \"Ac Quy\";\nobjBattery.Status = 0;\nobjBattery.Value = global.get(\"PRV.Acquy\") ||  10.0;\nobjBattery.TimeStamp = new Date(Date.now());\n\nlet dataPB = [];\ndataPB.push(objPsetCurrent);\ndataPB.push(objP1);\ndataPB.push(objP2);\ndataPB.push(objTemp);\ndataPB.push(objHu);\ndataPB.push(objBattery);\n\nresult.push(dataPB)\n\nlet dataPSet = [];\n\nlet objPSet = {};\nobjPSet.Name = \"ASCĐCĐ\";\nobjPSet.Status = 0;\nobjPSet.Value = global.get(\"PRV.P2Set\") ||  10.0;\nobjPSet.TimeStamp = new Date(Date.now());\n\ndataPSet.push(objPSet);\n\nfor(let i = 0; i<= 23; i++)\n{\n    let objH = {};\n    objH.Name = `${i}h`;\n    objH.Status = 0;\n    objH.Value = global.get(`PRV.A${i}`) || 10.0;\n    objH.TimeStamp = new Date(Date.now())\n    dataPSet.push(objH);\n}\n\nresult.push(dataPSet);\n\nmsg.payload = result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            [
                "76bb96ae99e8d6f5"
            ]
        ]
    },
    {
        "id": "da716c062e477fcb",
        "type": "debug",
        "z": "dea3599171b05ecc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1300,
        "y": 40,
        "wires": []
    },
    {
        "id": "3a13127130637c88",
        "type": "inject",
        "z": "dea3599171b05ecc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 420,
        "wires": [
            [
                "5cefe184dc577ef3"
            ]
        ]
    },
    {
        "id": "5cefe184dc577ef3",
        "type": "function",
        "z": "dea3599171b05ecc",
        "name": "",
        "func": "global.set(\"A0\",1.2)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ca3714a18d097111",
        "type": "function",
        "z": "3855446b400f94de",
        "name": "",
        "func": "msg.payload = Math.random(0, 6) * 10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "365d4da3a0bc1f38",
        "type": "inject",
        "z": "dea3599171b05ecc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "1a9200a52f252a1f"
            ]
        ]
    },
    {
        "id": "1a9200a52f252a1f",
        "type": "function",
        "z": "dea3599171b05ecc",
        "name": "GetData",
        "func": "let obj = {};\n\nobj.Man_Auto = global.get(\"PRV.Mode\") || 0\nobj.SS = global.get(\"PRV.SS\") || 0\nobj.M0 = global.get(\"PRV.M0\") || 0\nobj.A0 = global.get(\"PRV.A0\") || 0\nobj.A1 = global.get(\"PRV.A1\") || 0\nobj.A2 = global.get(\"PRV.A2\") || 0\nobj.A3 = global.get(\"PRV.A3\") || 0\nobj.A4 = global.get(\"PRV.A4\") || 0\nobj.A5 = global.get(\"PRV.A5\") || 0\nobj.A6 = global.get(\"PRV.A6\") || 0\nobj.A7 = global.get(\"PRV.A7\") || 0\nobj.A8 = global.get(\"PRV.A8\") || 0\nobj.A9 = global.get(\"PRV.A9\") || 0\nobj.A10 = global.get(\"PRV.A10\") || 0\nobj.A11 = global.get(\"PRV.A11\") || 0\nobj.A12 = global.get(\"PRV.A12\") || 0\nobj.A13 = global.get(\"PRV.A13\") || 0\nobj.A14 = global.get(\"PRV.A14\") || 0\nobj.A15 = global.get(\"PRV.A15\") || 0\nobj.A16 = global.get(\"PRV.A16\") || 0\nobj.A17 = global.get(\"PRV.A17\") || 0\nobj.A18 = global.get(\"PRV.A18\") || 0\nobj.A19 = global.get(\"PRV.A19\") || 0\nobj.A20 = global.get(\"PRV.A20\") || 0\nobj.A21 = global.get(\"PRV.A21\") || 0\nobj.A22 = global.get(\"PRV.A22\") || 0\nobj.A23 = global.get(\"PRV.A23\") || 0\n\nmsg.payload = obj;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 320,
        "wires": [
            [
                "cd156fc90df349e8"
            ]
        ]
    },
    {
        "id": "cd156fc90df349e8",
        "type": "ui_template",
        "z": "dea3599171b05ecc",
        "group": "b46fb8a92ad04724",
        "name": "PressureSetting",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" >\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" ></script>\n<!-- Google Fonts -->\n<link href=\"https://fonts.googleapis.com/css?family=Roboto:400,700\" rel=\"stylesheet\" type=\"text/css\"> \n<!-- Google Logos -->\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" type=\"text/css\">\n<style>\n        #PressureSetting_Default\n        {\n            top: 0px;\n            left: 0px;\n            width: 100% !important;\n            height: 100% !important;\n        }\n\n        .nr-dashboard-cardpanel \n        {\n            width: 100% !important;\n            height: 100% !important;\n        }\n\n        #PressureSetting_Default_cards \n        {\n            width: 100% !important;\n            \n        }\n\n        .nr-dashboard-template \n        {\n            width: 100% !important;\n            height: 100% !important;\n        }\n        .nr-dashboard-cardcontainer\n        {\n            height: 100% !important;\n        }\n        \n        .masonry-container {\n            width: 99% !important;\n            height: 99% !important;\n            min-height: 99% !important;\n        }\n        .title-control\n        {\n            text-transform: uppercase;\n            font-weight: 500;\n        }\n\n        .d-center {\n            display: flex ;\n            justify-content: center ;\n            align-items: center ;\n        }\n\n        .w-50 \n        {\n            width: 50%;\n        }\n\n        .w-20 \n        {\n            width: 20%;\n        }\n\n        .w-40\n        {\n            width: 40%;\n        }\n\n        .w-100 {\n            width: 100%;\n        }\n        \n        .w-70 {\n            width: 70%;\n        }\n        .header \n        {\n            background: #74b9ff !important;\n            color: white;\n        }\n</style>\n<body>\n    <div class=\"container-fluid\">\n        <div class=\"row mt-3\">\n            <div class=\"col\">\n                <h6 class=\"text-center title-control\" >Chế Độ Điều Khiển Van</h6>\n                <div class=\"row\">\n                   <md-button class=\"mt-3 mb-3\" ng-click=\"send({payload:msg.payload})\">\n                        Load\n                    </md-button>\n                    <div class=\"col-sm-4 d-flex justify-content-center\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remoteMan\" ng-true-value=\"1\" ng-model=\"msg.payload.Man_Auto\" ng-change=\"send({payload: action(msg)})\">\n                            <label class=\"form-check-label\" for=\"remoteMan\">\n                              Remote_Man\n                            </label>\n                          </div>\n                    </div>\n                    <div class=\"col-sm-4 d-flex justify-content-center\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remoteAuto\" ng-true-value=\"2\" ng-model=\"msg.payload.Man_Auto\" ng-change=\"send({payload: action2(msg)})\">\n                            <label class=\"form-check-label\" for=\"remoteAuto\">\n                              Remote_Auto\n                            </label>\n                          </div>\n                    </div>\n                    <div class=\"col-sm-4 d-flex justify-content-center\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"local\" ng-true-value=\"0\" ng-model=\"msg.payload.Man_Auto\" ng-change=\"send({payload: action3(msg)})\">\n                            <label class=\"form-check-label\" for=\"local\">\n                              Local\n                            </label>\n                          </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row mt-3\">\n            <div class=\"col\">\n                <h6 class=\"text-center title-control\" >Thông Tin Chỉ Số</h6>\n                <div class=\"row\">\n                    <div class=\"col d-flex justify-content-center\">\n                        <div class=\"input-group mb-3 w-20\">\n                            <span class=\"input-group-text\" id=\"basic-addon1\">Sai Số</span>\n                            <input type=\"number\" id=\"errorNumber\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.SS\" ng-blur=\"send ({payload:msg.payload})\">\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n        <div class=\"row mt-3\">\n            <div class=\"col-12\">\n                <table class=\"table w-100 m-auto\">\n                    \n                    <thead>\n                      <tr>\n                        <th scope=\"col\" colspan=\"3\" class=\"text-center header\">Áp suất cài đặt cố định</th>\n                      </tr>\n                    </thead>\n                    \n                    <tbody>\n                     <tr>\n                         <td>\n                            <div class=\"input-group d-flex justify-content-center m-auto w-70\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">M0</span>\n                                <input type=\"number\" id=\"m0\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.M0\" ng-blur=\"send ({payload:msg.payload})\">\n                            </div>\n                         </td>\n                     </tr>\n                    \n                    <thead>\n                      <tr>\n                        <th scope=\"col\" colspan=\"3\" class=\"text-center header\">Bảng áp suất và cài đặt theo giờ</th>\n                      </tr>\n                    </thead>\n                    \n                    <tbody>\n                     <tr>\n                         <td>\n                            <div class=\"input-group d-flex justify-content-center m-auto w-70\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">0h</span>\n                                <input type=\"number\" ng-model=\"msg.payload.A0\" ng-blur=\"send ({payload:msg.payload})\" class=\"form-control\" id=\"h0\">\n                            </div>\n                         </td>\n                         <td>\n                            <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">1h</span>\n                                <input type=\"number\" id=\"h1\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A1\" ng-blur=\"send ({payload:msg.payload})\">\n                            </div>\n                         </td>\n                         <td>\n                            <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">2h</span>\n                                <input type=\"number\" id=\"h2\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A2\" ng-blur=\"send ({payload:msg.payload})\">\n                            </div>\n                         </td>\n                     </tr>\n                     <tr>\n                         <td>\n                            <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">3h</span>\n                                <input type=\"number\" id=\"h3\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A3\" ng-blur=\"send ({payload:msg.payload})\">\n                            </div>\n                         </td>\n                         <td>\n                            <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">4h</span>\n                                <input type=\"number\" id=\"h4\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A4\" ng-blur=\"send ({payload:msg.payload})\">\n                            </div>\n                         </td>\n                         <td>\n                            <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">5h</span>\n                                <input type=\"number\" id=\"h5\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A5\" ng-blur=\"send ({payload:msg.payload})\">\n                            </div>\n                         </td>\n                     </tr>\n                     \n                     <tr>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">6h</span>\n                               <input type=\"number\" id=\"h6\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A6\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">7h</span>\n                               <input type=\"number\" id=\"h7\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A7\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">8h</span>\n                               <input type=\"number\" id=\"h8\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A8\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        \n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">9h</span>\n                               <input type=\"number\" id=\"h9\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A9\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">10h</span>\n                               <input type=\"number\" id=\"h10\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A10\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">11h</span>\n                               <input type=\"number\" id=\"h11\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A11\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">12h</span>\n                               <input type=\"number\" id=\"h12\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A12\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">13h</span>\n                               <input type=\"number\" id=\"h13\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A13\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">14h</span>\n                               <input type=\"number\" id=\"h14\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A14\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        \n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">15h</span>\n                               <input type=\"number\" id=\"h15\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A15\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">16h</span>\n                               <input type=\"number\" id=\"h16\" class=\"form-control\" value=\"\" ang-model=\"msg.payload.A16\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">17h</span>\n                               <input type=\"number\" id=\"h17\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A17\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">18h</span>\n                               <input type=\"number\" id=\"h18\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A18\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">19h</span>\n                               <input type=\"number\" id=\"h19\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A19\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">20h</span>\n                               <input type=\"number\" id=\"h20\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A20\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">21h</span>\n                               <input type=\"number\" id=\"h21\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A21\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                         <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">22h</span>\n                               <input type=\"number\" id=\"h22\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A22\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                        <td>\n                           <div class=\"input-group d-flex justify-content-center w-70 m-auto\">\n                               <span class=\"input-group-text\" id=\"basic-addon1\">23h</span>\n                               <input type=\"number\" id=\"h23\" class=\"form-control\" value=\"\" ng-model=\"msg.payload.A23\" ng-blur=\"send ({payload:msg.payload})\">\n                           </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                  </table>\n            </div>\n        </div> \n        <div class=\"row mt-3 mb-3\">\n                <md-button ng-click=\"send({payload:msg.payload})\">\n                    Update\n                </md-button>\n        </div>\n    </div>\n    <script>\n    \n        \n        \n        var scope;\n    \n        scope.$watch('msg', function(msg) {\n            \n            let remoteMan = document.getElementById('remoteMan');\n            let remoteAuto = document.getElementById('remoteAuto');\n            let local = document.getElementById('local');\n            let errorNumber  = document.getElementById('errorNumber');\n            let h1  = document.getElementById('h1');\n            let h2  = document.getElementById('h2');\n            let h3  = document.getElementById('h3');\n            let h4  = document.getElementById('h4');\n            let h5  = document.getElementById('h5');\n            let h6  = document.getElementById('h6');\n            let h7  = document.getElementById('h7');\n            let h8  = document.getElementById('h8');\n            let h9  = document.getElementById('h9');\n            let h0  = document.getElementById('h0');\n            let h10  = document.getElementById('h10');\n            let h11  = document.getElementById('h11');\n            let h12  = document.getElementById('h12');\n            let h13  = document.getElementById('h13');\n            let h14  = document.getElementById('h14');\n            let h15  = document.getElementById('h15');\n            let h16  = document.getElementById('h16');\n            let h17  = document.getElementById('h17');\n            let h19  = document.getElementById('h19');\n            let h18  = document.getElementById('h18');\n            let h20  = document.getElementById('h20');\n            let h21  = document.getElementById('h21');\n            let h22  = document.getElementById('h22');\n            let h23  = document.getElementById('h23');\n            let m0 = document.getElementById('m0');\n        \n            \n            updateMode(msg.payload);\n            updateErrorNumber(msg.payload)\n            updateDataHours(msg.payload)\n            updateM0Value(msg.payload)\n            \n        });\n        \n        function updateMode(data)\n        {\n            if(data.hasOwnProperty(\"Man_Auto\"))\n            {\n                if(data.Man_Auto != null && data.Man_Auto != undefined)\n                {\n                    if(data.Man_Auto == 0)\n                    {\n                        remoteAuto.checked = false;\n                        remoteMan.checked = false;\n                        local.checked = true;\n                    }\n                    else if(data.Man_Auto == 1)\n                    {\n                        remoteAuto.checked = false;\n                        local.checked = false;\n                        remoteMan.checked = true;\n                    }\n                    else if(data.Man_Auto == 2)\n                    {\n                        remoteMan.checked = false;\n                        local.checked = false;\n                        remoteAuto.checked = true;\n                    }\n                }\n                else \n                {\n                    remoteAuto.checked = false;\n                    remoteMan.checked = false;\n                    local.checked = false;\n                }\n                \n            }\n            else \n            {\n                remoteAuto.checked = false;\n                remoteMan.checked = false;\n                local.checked = false;\n            }\n        }\n        \n        function updateErrorNumber(data)\n        {\n            if(data.hasOwnProperty(\"SS\"))\n            {\n                if(data.SS != null && data.SS != undefined)\n                {\n                    errorNumber.value = data.SS;\n                }\n                else \n                {\n                    errorNumber.value = \"\";\n                }\n            }\n            else \n            {\n                errorNumber.value = \"\";\n            }\n            \n        }\n        \n        function updateM0Value(data)\n        {\n            if(data.hasOwnProperty(\"M0\"))\n            {\n                if(data.M0 != null && data.M0 != undefined)\n                {\n                    m0.value = data.M0;\n                }\n                else \n                {\n                    m0.value = \"\";\n                }\n            }\n            else \n            {\n                m0.value = \"\";\n            }\n        }\n        \n        function updateDataHours(data)\n        {\n            for(let i = 0; i <= 23; i++)\n            {\n                if(data.hasOwnProperty(`A${i}`))\n                {\n                    if(data[`A${i}`] != null && data[`A${i}`] != undefined)\n                    {\n                        document.getElementById(`h${i}`).value =   data[`A${i}`]; \n                    }\n                    else \n                    {\n                        document.getElementById(`h${i}`).value = \"\";\n                    }\n                }\n                else \n                {\n                   document.getElementById(`h${i}`).value = \"\"; \n                }\n            }\n        }\n        \n        this.scope.action = function (msg) {\n            let obj = {...msg.payload};\n            obj.Man_Auto = 1;\n            return obj\n        }\n        \n        this.scope.action2 = function(msg) {\n            let obj = {...msg.payload};\n            obj.Man_Auto = 2;\n            return obj\n        }\n        \n        this.scope.action3 = function(msg) {\n            let obj = {...msg.payload};\n            obj.Man_Auto = 0;\n            return obj\n        }\n    </script>\n</body>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 520,
        "y": 320,
        "wires": [
            [
                "578dc7ca15ab2303"
            ]
        ]
    },
    {
        "id": "578dc7ca15ab2303",
        "type": "debug",
        "z": "dea3599171b05ecc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 320,
        "wires": []
    }
]